{
    "openapi": "3.0.3",
    "info": {
        "title": "Automation Hub API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Ansible Collections",
        "contact": {
            "name": "Automation Hub Team",
            "email": "ansible-galaxy-team@redhat.com",
            "url": "https://www.ansible.com/products/automation-hub"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/ansible/galaxy_ng/main/LICENSE"
        },
        "x-logo": {
            "url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"
        },
        "x-pulp-app-versions": {
            "core": "3.49.42",
            "galaxy": "4.11.0",
            "ansible": "0.25.1",
            "container": "2.19.3",
            "certguard": "3.49.42",
            "file": "3.49.42"
        },
        "x-pulp-domain-enabled": false
    },
    "paths": {
        "/ansible/collections/": {
            "post": {
                "operationId": "upload_collection",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/": {
            "get": {
                "operationId": "api_galaxy_read",
                "tags": [
                    "Api: Galaxy"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/": {
            "get": {
                "operationId": "api_galaxy__ui_read",
                "tags": [
                    "Api: _Ui"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/auth/login/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_auth_login_get",
                "tags": [
                    "Api: _Ui V1 Auth Login"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.LoginResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_auth_login_post",
                "tags": [
                    "Api: _Ui V1 Auth Login"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Login"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Login"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Login"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.LoginResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/auth/logout/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_auth_logout_post",
                "tags": [
                    "Api: _Ui V1 Auth Logout"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/collection-versions/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_collection_versions_list",
                "summary": "List collection versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-collection",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "collection",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `collection` - Collection\n* `-collection` - Collection (descending)\n* `version` - Version\n* `-version` - Version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Collection-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.LoginResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_href}": {
            "get": {
                "operationId": "content_ansible_collection_versions_read",
                "description": "ViewSet for Ansible Collection.",
                "summary": "Inspect a collection version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/collection_signing/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_collection_signing_sign",
                "tags": [
                    "Api: _Ui V1 Collection_Signing"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/collection_signing/{path}/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_collection_signing_sign",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Collection_Signing"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/collection_signing/{path}/{namespace}/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_collection_signing_sign",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Collection_Signing"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/collection_signing/{path}/{namespace}/{collection}/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_collection_signing_sign",
                "parameters": [
                    {
                        "in": "path",
                        "name": "collection",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Collection_Signing"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/collection_signing/{path}/{namespace}/{collection}/{version}/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_collection_signing_sign",
                "parameters": [
                    {
                        "in": "path",
                        "name": "collection",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Collection_Signing"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/controllers/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_controllers_get",
                "tags": [
                    "Api: _Ui V1 Controllers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/distributions/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_distributions_list",
                "summary": "List ansible distributions",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Distributions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}": {
            "get": {
                "operationId": "distributions_ansible_ansible_read",
                "description": "ViewSet for Ansible Distributions.",
                "summary": "Inspect an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_ansible_ansible_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_ansible_ansible_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_ansible_ansible_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/execution-environments/registries/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_execution_environments_registries_list",
                "description": "Replace pulp_id (pk) with id, so Swagger UI shows {id} in browsable API",
                "summary": "List container registry remotes",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-name",
                                    "-updated_at",
                                    "-url",
                                    "created_at",
                                    "name",
                                    "updated_at",
                                    "url"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "updated_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Execution-Environments Registries"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.ContainerRegistryRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_execution_environments_registries_create",
                "description": "Replace pulp_id (pk) with id, so Swagger UI shows {id} in browsable API",
                "summary": "Create a container registry remote",
                "tags": [
                    "Api: _Ui V1 Execution-Environments Registries"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.ContainerRegistryRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.ContainerRegistryRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.ContainerRegistryRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.ContainerRegistryRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_container_registry_remote_href}": {
            "get": {
                "operationId": "galaxy_ng_registry_remote_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a container registry remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_registry_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Galaxy_Ng: Registry-Remote"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.ContainerRegistryRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "container_registry_remote_update",
                "description": "Replace pulp_id (pk) with id, so Swagger UI shows {id} in browsable API",
                "summary": "Update a container registry remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_registry_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Container: Remote"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.ContainerRegistryRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.ContainerRegistryRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.ContainerRegistryRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.ContainerRegistryRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "container_registry_remote_delete",
                "description": "Replace pulp_id (pk) with id, so Swagger UI shows {id} in browsable API",
                "summary": "Delete a container registry remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_registry_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Container: Remote"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/execution-environments/registries/{id}/index/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_execution_environments_registries_index_index_execution_environments",
                "description": "Trigger an asynchronous indexing task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Execution-Environments Registries Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/execution-environments/registries/{id}/sync/": {
            "post": {
                "operationId": "api_galaxy__ui_v1_execution_environments_registries_sync_sync",
                "description": "Trigger an asynchronous sync task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Execution-Environments Registries Sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/execution-environments/remotes/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_execution_environments_remotes_list",
                "description": "Replace pulp_id (pk) with id, so Swagger UI shows {id} in browsable API",
                "summary": "List container remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Execution-Environments Remotes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_execution_environments_remotes_create",
                "description": "Replace pulp_id (pk) with id, so Swagger UI shows {id} in browsable API",
                "summary": "Create a container remote",
                "tags": [
                    "Api: _Ui V1 Execution-Environments Remotes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}": {
            "get": {
                "operationId": "remotes_container_container_read",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "summary": "Inspect a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_container_container_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_container_container_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_container_container_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/feature-flags/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_feature_flags_get",
                "tags": [
                    "Api: _Ui V1 Feature-Flags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "ViewSet for Group.",
                "summary": "List groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_create",
                "description": "ViewSet for Group.",
                "summary": "Create a group",
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}users/": {
            "get": {
                "operationId": "groups_users_list",
                "description": "List group users.",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_users_create",
                "description": "Add a user to a group.",
                "summary": "Create an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupUserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{groups_user_href}": {
            "delete": {
                "operationId": "groups_users_delete",
                "description": "Remove a user from a group.",
                "summary": "Delete an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{auth_group_href}": {
            "get": {
                "operationId": "groups_read",
                "description": "ViewSet for Group.",
                "summary": "Inspect a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_delete",
                "description": "ViewSet for Group.",
                "summary": "Delete a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/imports/collections/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_imports_collections_list",
                "description": "ViewSet for CollectionImports.",
                "summary": "List collection imports",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created",
                                    "created"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created` - Created\n* `-created` - Created (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Imports Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedImportTaskListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_import_href}": {
            "get": {
                "operationId": "collection_import_read",
                "description": "Returns a CollectionImport object.",
                "summary": "Inspect a collection import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "since",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter messages since a given timestamp"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Collection: Import"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionImportDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/landing-page/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_landing_page_read",
                "tags": [
                    "Api: _Ui V1 Landing-Page"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/me/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_me_read",
                "tags": [
                    "Api: _Ui V1 Me"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_galaxy__ui_v1_me_update",
                "tags": [
                    "Api: _Ui V1 Me"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrentUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrentUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrentUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/my-distributions/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_my_distributions_list",
                "summary": "List ansible distributions",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 My-Distributions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/my-namespaces/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_my_namespaces_list",
                "summary": "List namespaces",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-company",
                                    "-id",
                                    "-name",
                                    "company",
                                    "id",
                                    "name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `id` - Id\n* `-id` - Id (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 My-Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.NamespaceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_my_namespaces_create",
                "description": "Override to validate for name duplication before serializer validation.",
                "summary": "Create a namespace",
                "tags": [
                    "Api: _Ui V1 My-Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_namespace_href}": {
            "get": {
                "operationId": "namespace_instance_read",
                "summary": "Inspect a namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Namespace: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "namespace_instance_update",
                "summary": "Update a namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Namespace: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "namespace_instance_partial_update",
                "summary": "Update a namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Namespace: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedgalaxy.Namespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedgalaxy.Namespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedgalaxy.Namespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "namespace_instance_delete",
                "description": "Delete a namespace.\n\n1. Perform a check to see if there are any collections in the namespace.\n   If there are, return a failure.\n2. Delete the pulp distro and repository\n3. Delete the namespace object.\n\nreturn: Response(status=204)",
                "summary": "Delete a namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Namespace: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/my-synclists/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_my_synclists_list",
                "summary": "List sync lists",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 My-Synclists"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSyncListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_my_synclists_create",
                "summary": "Create a sync list",
                "tags": [
                    "Api: _Ui V1 My-Synclists"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_sync_list_href}": {
            "get": {
                "operationId": "sync_list_instance_read",
                "summary": "Inspect a sync list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_sync_list_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Sync: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "sync_list_instance_update",
                "summary": "Update a sync list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_sync_list_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Sync: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "sync_list_instance_partial_update",
                "summary": "Update a sync list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_sync_list_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Sync: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSyncList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSyncList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSyncList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "sync_list_instance_delete",
                "summary": "Delete a sync list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_sync_list_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Sync: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{galaxy_sync_list_href}curate/": {
            "post": {
                "operationId": "curate_curate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_sync_list_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Curate"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/namespaces/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_namespaces_list",
                "summary": "List namespaces",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-company",
                                    "-id",
                                    "-name",
                                    "company",
                                    "id",
                                    "name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `id` - Id\n* `-id` - Id (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.NamespaceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_namespaces_create",
                "description": "Override to validate for name duplication before serializer validation.",
                "summary": "Create a namespace",
                "tags": [
                    "Api: _Ui V1 Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/remotes/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_remotes_list",
                "summary": "List collection remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Remotes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_remotes_create",
                "summary": "Create a collection remote",
                "tags": [
                    "Api: _Ui V1 Remotes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_collection_read",
                "description": "ViewSet for Collection Remotes.",
                "summary": "Inspect a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_collection_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_collection_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_collection_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/repo/{distro_base_path}/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_repo_list",
                "description": "Viewset that uses CollectionVersion's within distribution to display data for Collection's.\n\nCollection list is filterable by FilterSet and includes latest CollectionVersion.\n\nCollection detail includes CollectionVersion that is latest or via query param 'version'.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_related",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sign_state",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Repo"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.LoginResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/repo/{distro_base_path}/{namespace}/{name}/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_repo_read",
                "description": "Viewset that uses CollectionVersion's within distribution to display data for Collection's.\n\nCollection list is filterable by FilterSet and includes latest CollectionVersion.\n\nCollection detail includes CollectionVersion that is latest or via query param 'version'.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Repo"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.LoginResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/search/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_search_list",
                "description": "Lists Search results for Collections + Roles.\nAggregates search from Collections and Roles in the same results set.\n\n\n## filtering\n\n- **search_type:** [\"sql\", \"websearch\"]\n- **keywords:** string\n    - queried against name,namespace,description,tags,platform\n    - when search_type is websearch allows operators e.g: \"this OR that AND (A OR B) -C\"\n    - when search_type is sql performs a SQL ilike on the same fields\n- **type:** [\"collection\", \"role\"]\n- **deprecated:** boolean\n- **name:** string (iexact query)\n- **namespace:** string (iexact query)\n- **tags:** string[] (allows multiple &tags=..&tags=..)\n- **platform:** string\n\n## Sorting\n\nSorting is performed by passing `order_by` parameter, optionally prefixed with `-` for DESC,\nthe allowed fields are:\n\n- name\n- namespace_name\n- download_count\n- last_updated\n- relevance (only when search_type is websearch)\n\n## Pagination\n\nPagination is based on `limit` and `offset` parameters.\n\n## Results\n\nResults are embedded in the pagination serializer including\n`meta:count` and `links:first,previous,next,last`.\n\nThe `data` key contains the results in the format::\n\n```python\n{\n  \"name\": \"brunogphmzthghu\",\n  \"namespace\": \"brunovrhvjkdh\",\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\",\n  \"type\": \"role\",\n  \"latest_version\": \"1.4.9\",\n  \"avatar_url\": \"https://github.com/brunogphmzthghu.png,\n  \"contents\": [],\n  \"download_count\": 9999,\n  \"last_updated\": \"2023-11-09T15:17:01.235457Z\",\n  \"deprecated\": false,\n  \"tags\": [\"development\", \"java\", \"python\"],\n  \"platforms\": [{\"name\": \"Ubuntu\", \"versions\": [\"jammy\", \"focal\"]}]\n}\n```",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search term to be queried against search vector if search_type is websearch or SQL ilike if search_type is sql"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Executes iexact filter on name"
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Executes iexact filter on namespace"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "-download_count",
                                "-last_updated",
                                "-name",
                                "-namespace_name",
                                "-relevance",
                                "download_count",
                                "last_updated",
                                "name",
                                "namespace_name",
                                "relevance"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "platform",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sql",
                                "websearch"
                            ],
                            "default": "websearch"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection",
                                "role"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Search"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSearchResultsResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/settings/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_settings_get",
                "tags": [
                    "Api: _Ui V1 Settings"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/synclists/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_synclists_list",
                "summary": "List sync lists",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Synclists"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSyncListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_synclists_create",
                "summary": "Create a sync list",
                "tags": [
                    "Api: _Ui V1 Synclists"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyncListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/tags/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_tags_list",
                "summary": "List tags",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/tags/collections/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_tags_collections_list",
                "description": "ViewSet for collections' tags within the system.",
                "summary": "List tags",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-count",
                                    "-name",
                                    "count",
                                    "name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)\n* `count` - Count\n* `-count` - Count (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Tags Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/tags/roles/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_tags_roles_list",
                "description": "ViewSet for roles' tags within the system.\nTags can be populated manually by running `django-admin populate-role-tags`.",
                "summary": "List legacy role tags",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-count",
                                    "-name",
                                    "count",
                                    "name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)\n* `count` - Count\n* `-count` - Count (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Tags Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedLegacyRoleTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v1/users/": {
            "get": {
                "operationId": "api_galaxy__ui_v1_users_list",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date_joined",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "groups__name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-date_joined",
                                    "-email",
                                    "-first_name",
                                    "-last_name",
                                    "-username",
                                    "date_joined",
                                    "email",
                                    "first_name",
                                    "last_name",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `username` - Username\n* `-username` - Username (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `first_name` - First name\n* `-first_name` - First name (descending)\n* `last_name` - Last name\n* `-last_name` - Last name (descending)\n* `date_joined` - Date joined\n* `-date_joined` - Date joined (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V1 Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v1_users_create",
                "summary": "Create an user",
                "tags": [
                    "Api: _Ui V1 Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_user_href}": {
            "get": {
                "operationId": "users_read",
                "description": "ViewSet for User.",
                "summary": "Inspect an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "description": "ViewSet for User.",
                "summary": "Update an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "ViewSet for User.",
                "summary": "Update an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_delete",
                "description": "ViewSet for User.",
                "summary": "Delete an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/groups/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_groups_list",
                "summary": "List groups",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_groups_create",
                "summary": "Create a group",
                "tags": [
                    "Api: _Ui V2 Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_group_href}": {
            "get": {
                "operationId": "group_instance_read",
                "summary": "Inspect a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Group: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "group_instance_update",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Group: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "group_instance_partial_update",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Group: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "group_instance_delete",
                "summary": "Delete a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Group: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/me/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_me_read",
                "tags": [
                    "Api: _Ui V2 Me"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/organizations/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_organizations_list",
                "summary": "List organizations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "resource__ansible_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Organizations"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_organizations_create",
                "summary": "Create an organization",
                "tags": [
                    "Api: _Ui V2 Organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_organization_href}": {
            "get": {
                "operationId": "organization_instance_read",
                "summary": "Inspect an organization",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_organization_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Organization: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "organization_instance_update",
                "summary": "Update an organization",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_organization_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Organization: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "organization_instance_partial_update",
                "summary": "Update an organization",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_organization_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Organization: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "organization_instance_delete",
                "summary": "Delete an organization",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_organization_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Organization: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_definitions/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_definitions_list",
                "description": "Role Definitions (roles) contain a list of permissions and can be used to\nassign those permissions to a user or team through the respective\nassignment endpoints.\n\nCustom roles can be created, modified, and deleted through this endpoint.\nSystem-managed roles are shown here, which cannot be edited or deleted,\nbut can be assigned to users.",
                "summary": "List role_definition",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Definitions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleDefinitionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_role_definitions_create",
                "description": "Role Definitions (roles) contain a list of permissions and can be used to\nassign those permissions to a user or team through the respective\nassignment endpoints.\n\nCustom roles can be created, modified, and deleted through this endpoint.\nSystem-managed roles are shown here, which cannot be edited or deleted,\nbut can be assigned to users.",
                "summary": "Create a role definition",
                "tags": [
                    "Api: _Ui V2 Role_Definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDefinition"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDefinition"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDefinition"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleDefinitionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{dab_rbac_role_definition_href}": {
            "get": {
                "operationId": "role_definition_instance_read",
                "description": "Role Definitions (roles) contain a list of permissions and can be used to\nassign those permissions to a user or team through the respective\nassignment endpoints.\n\nCustom roles can be created, modified, and deleted through this endpoint.\nSystem-managed roles are shown here, which cannot be edited or deleted,\nbut can be assigned to users.",
                "summary": "Inspect a role definition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_rbac_role_definition_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Role: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleDefinitionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "role_definition_instance_update",
                "description": "Role Definitions (roles) contain a list of permissions and can be used to\nassign those permissions to a user or team through the respective\nassignment endpoints.\n\nCustom roles can be created, modified, and deleted through this endpoint.\nSystem-managed roles are shown here, which cannot be edited or deleted,\nbut can be assigned to users.",
                "summary": "Update a role definition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_rbac_role_definition_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Role: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDefinitionDetail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDefinitionDetail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDefinitionDetail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleDefinitionDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "role_definition_instance_partial_update",
                "description": "Role Definitions (roles) contain a list of permissions and can be used to\nassign those permissions to a user or team through the respective\nassignment endpoints.\n\nCustom roles can be created, modified, and deleted through this endpoint.\nSystem-managed roles are shown here, which cannot be edited or deleted,\nbut can be assigned to users.",
                "summary": "Update a role definition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_rbac_role_definition_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Role: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRoleDefinition"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRoleDefinition"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRoleDefinition"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleDefinitionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "role_definition_instance_delete",
                "description": "Role Definitions (roles) contain a list of permissions and can be used to\nassign those permissions to a user or team through the respective\nassignment endpoints.\n\nCustom roles can be created, modified, and deleted through this endpoint.\nSystem-managed roles are shown here, which cannot be edited or deleted,\nbut can be assigned to users.",
                "summary": "Delete a role definition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_rbac_role_definition_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Role: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_definitions/{id}/team_assignments/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_definitions_team_assignments_list",
                "description": "Manage Role Team Assignment objects in the 'team_assignments' relationship of this particular Role Definition.\n\nStarting from the detail URL:\n\nGET /:id/team_assignments/ to show role team assignments currently in the relationship",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Definitions Team_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleTeamAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_definitions/{id}/user_assignments/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_definitions_user_assignments_list",
                "description": "Manage Role User Assignment objects in the 'user_assignments' relationship of this particular Role Definition.\n\nStarting from the detail URL:\n\nGET /:id/user_assignments/ to show role user assignments currently in the relationship",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9]+$"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Definitions User_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleUserAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_metadata/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_metadata_get",
                "description": "General data about models and permissions tracked by django-ansible-base RBAC\n\nInformation from this endpoint should be static given a server version.\nThis reflects model definitions, registrations with the permission registry,\nand enablement of RBAC features in settings.\n\nallowed_permissions: Valid permissions for a role of a given content_type",
                "tags": [
                    "Api: _Ui V2 Role_Metadata"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_team_access/{model_name}/{id}/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_team_access_list",
                "description": "Use this endpoint to get a list of users who have access to a resource.\nThis is a list-only view that provides a list of users, plus extra data.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^([0-9]+|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "model_name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Team_Access"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTeamAccessViewSet_Team_ResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_team_access/{model_name}/{id}/{actor_pk}/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_team_access_list",
                "description": "This gives drill-down information about the means of inheritance\nfor all the permissions show in the higher-level view of the access list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "actor_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^([0-9]+|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "model_name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Team_Access"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTeamAccessAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_team_assignments/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_team_assignments_list",
                "description": "Use this endpoint to give a team permission to a resource or an organization.\nThe needed data is the team, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Team_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleTeamAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_role_team_assignments_create",
                "description": "Use this endpoint to give a team permission to a resource or an organization.\nThe needed data is the team, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "tags": [
                    "Api: _Ui V2 Role_Team_Assignments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleTeamAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleTeamAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleTeamAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleTeamAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_team_assignments/{id}/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_team_assignments_read",
                "description": "Use this endpoint to give a team permission to a resource or an organization.\nThe needed data is the team, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Team_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleTeamAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy__ui_v2_role_team_assignments_delete",
                "description": "Use this endpoint to give a team permission to a resource or an organization.\nThe needed data is the team, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_Team_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_user_access/{model_name}/{id}/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_user_access_list",
                "description": "Use this endpoint to get a list of users who have access to a resource.\nThis is a list-only view that provides a list of users, plus extra data.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^([0-9]+|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "model_name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_User_Access"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserAccessViewSet_User_ResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_user_access/{model_name}/{id}/{actor_pk}/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_user_access_list",
                "description": "This gives drill-down information about the means of inheritance\nfor all the permissions show in the higher-level view of the access list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "actor_pk",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "pattern": "^([0-9]+|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "model_name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_User_Access"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserAccessAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_user_assignments/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_user_assignments_list",
                "description": "Use this endpoint to give a user permission to a resource or an organization.\nThe needed data is the user, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_User_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleUserAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_role_user_assignments_create",
                "description": "Use this endpoint to give a user permission to a resource or an organization.\nThe needed data is the user, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "tags": [
                    "Api: _Ui V2 Role_User_Assignments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleUserAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleUserAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleUserAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleUserAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/role_user_assignments/{id}/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_role_user_assignments_read",
                "description": "Use this endpoint to give a user permission to a resource or an organization.\nThe needed data is the user, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_User_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleUserAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy__ui_v2_role_user_assignments_delete",
                "description": "Use this endpoint to give a user permission to a resource or an organization.\nThe needed data is the user, the role definition, and the object id.\nThe object must be of the type specified in the role definition.\nThe type given in the role definition and the provided object_id are used\nto look up the resource.\n\nAfter creation, the assignment cannot be edited, but can be deleted to\nremove those permissions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Role_User_Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/teams/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_teams_list",
                "summary": "List teams",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "resource__ansible_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTeamResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_teams_create",
                "summary": "Create a team",
                "tags": [
                    "Api: _Ui V2 Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_team_href}": {
            "get": {
                "operationId": "team_instance_read",
                "summary": "Inspect a team",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_team_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Team: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "team_instance_update",
                "summary": "Update a team",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_team_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Team: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "team_instance_partial_update",
                "summary": "Update a team",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_team_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Team: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeam"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeam"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeam"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "team_instance_delete",
                "summary": "Delete a team",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_team_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Team: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/_ui/v2/users/": {
            "get": {
                "operationId": "api_galaxy__ui_v2_users_list",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date_joined",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_superuser",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "resource__ansible_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-date_joined",
                                    "-email",
                                    "-first_name",
                                    "-last_name",
                                    "-username",
                                    "date_joined",
                                    "email",
                                    "first_name",
                                    "last_name",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `username` - Username\n* `-username` - Username (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `first_name` - First name\n* `-first_name` - First name (descending)\n* `last_name` - Last name\n* `-last_name` - Last name (descending)\n* `date_joined` - Date joined\n* `-date_joined` - Date joined (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: _Ui V2 Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserDetailResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy__ui_v2_users_create",
                "summary": "Create an user",
                "tags": [
                    "Api: _Ui V2 Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateUpdateDelete"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateUpdateDelete"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateUpdateDelete"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreateUpdateDeleteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/api/": {
            "get": {
                "operationId": "api_galaxy_api_read",
                "tags": [
                    "Api: Api"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/": {
            "get": {
                "operationId": "api_galaxy_content_read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/api/": {
            "get": {
                "operationId": "api_galaxy_content_api_read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content Api"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/": {
            "get": {
                "operationId": "api_galaxy_content_v3_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/artifacts/collections/": {
            "post": {
                "operationId": "api_galaxy_content_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/artifacts/collections/{path}/{filename}": {
            "get": {
                "operationId": "api_galaxy_content_v3_artifacts_collections_get",
                "description": "Download collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Artifacts Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collection_versions/all/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collection_versions_all_get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collection_Versions All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collections_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collections_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "api_galaxy_content_v3_collections_update",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_content_v3_collections_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collections_versions_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collections_versions_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_content_v3_collections_versions_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/copy/{source_path}/{dest_path}/": {
            "post": {
                "operationId": "api_galaxy_content_v3_collections_versions_copy_copy_content",
                "description": "Copy collection version from one  repository to another.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dest_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "source_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections Versions Copy"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collections_versions_docs_blob_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/": {
            "post": {
                "operationId": "api_galaxy_content_v3_collections_versions_move_move_content",
                "description": "Remove content from source repo and add to destination repo.\n\nCreates new RepositoryVersion of source repo without content included.\nCreates new RepositoryVersion of destination repo with content included.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dest_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "source_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections Versions Move"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/collections/all/": {
            "get": {
                "operationId": "api_galaxy_content_v3_collections_all_get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Collections All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/excludes/": {
            "get": {
                "operationId": "api_galaxy_content_v3_excludes_read",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Excludes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/namespaces/": {
            "get": {
                "operationId": "api_galaxy_content_v3_namespaces_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/namespaces/{name}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_namespaces_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/client-configuration/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_client_configuration_read",
                "description": "Return configurations for the ansible-galaxy client.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Client-Configuration"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_read",
                "description": "ViewSet for Repository Metadata.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/all-collections/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_all_collections_list",
                "description": "Unpaginated ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections All-Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/all-versions/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_all_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections All-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/": {
            "post": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_artifacts_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/{filename}": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_artifacts_download",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/index/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_versions_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_collections_index_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Collections Index Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/namespaces/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_namespaces_list",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_namespaces_create",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/ansible/content/{distro_base_path}/namespaces/{name}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_namespaces_read",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_namespaces_partial_update",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_content_v3_plugin_ansible_content_namespaces_delete",
                "description": "Try to remove the Namespace if no Collections under Namespace are present.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_cross_repository_collection_version_index_href}v3/plugin/ansible/search/collection-versions/": {
            "get": {
                "operationId": "v3_plugin_ansible_search_collection_versions_list",
                "description": "A viewset for cross-repo searches.",
                "summary": "List cross repository collection version indexs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_cross_repository_collection_version_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these distrubtion ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "distribution_base_path",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these base paths.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - by CV created\n* `-pulp_created` - by CV created (descending)\n* `namespace` - by CV namespace\n* `-namespace` - by CV namespace (descending)\n* `name` - by CV name\n* `-name` - by CV name (descending)\n* `version` - by CV version\n* `-version` - by CV version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repository ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "repository_name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repositories.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "V3: Ansible Search Collection-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionSearchListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "v3_plugin_ansible_search_collection_versions_rebuild",
                "description": "A viewset for cross-repo searches.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_cross_repository_collection_version_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "V3: Ansible Search Collection-Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_container_distribution_href}v3/plugin/execution-environments/repositories/": {
            "get": {
                "operationId": "v3_plugin_execution_environments_repositories_list",
                "summary": "List container distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "galaxy_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "my_permissions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-description",
                                    "-name",
                                    "-updated_at",
                                    "created_at",
                                    "description",
                                    "name",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "V3: Execution-Environments Repositories"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_container_distribution_href}": {
            "get": {
                "operationId": "container_repository_read",
                "summary": "Inspect a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Container: Repository"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "container_repository_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Container: Repository"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/execution-environments/repositories/{base_path}/_content/history/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_execution_environments_repositories__content_history_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-number",
                                    "created_at",
                                    "number"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `number` - Number\n* `-number` - Number (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Execution-Environments Repositories _Content History"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerRepositoryHistoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/execution-environments/repositories/{base_path}/_content/images/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_execution_environments_repositories__content_images_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "digest__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "digest__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "digest__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclude_child_manifests",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "created_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Execution-Environments Repositories _Content Images"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerManifestResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/execution-environments/repositories/{base_path}/_content/images/{manifest_ref}/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_execution_environments_repositories__content_images_read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "manifest_ref",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Execution-Environments Repositories _Content Images"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerManifestDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_content_v3_plugin_execution_environments_repositories__content_images_delete",
                "description": "Trigger an asynchronous task to remove a manifest and all its associated data by a digest",
                "summary": "Delete an image from a repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "manifest_ref",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Execution-Environments Repositories _Content Images"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_container_distro_readme_href}_content/readme/": {
            "get": {
                "operationId": "_content_readme_read",
                "summary": "Inspect a container distro readme",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_distro_readme_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "_Content: Readme"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerReadmeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "_content_readme_update",
                "summary": "Update a container distro readme",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_container_distro_readme_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "_Content: Readme"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerReadme"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerReadme"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerReadme"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerReadmeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/execution-environments/repositories/{base_path}/_content/sync/": {
            "post": {
                "operationId": "api_galaxy_content_v3_plugin_execution_environments_repositories__content_sync_sync",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Execution-Environments Repositories _Content Sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/plugin/execution-environments/repositories/{base_path}/_content/tags/": {
            "get": {
                "operationId": "api_galaxy_content_v3_plugin_execution_environments_repositories__content_tags_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-name",
                                    "-updated_at",
                                    "created_at",
                                    "name",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `name` - Name\n* `-name` - Name (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Plugin Execution-Environments Repositories _Content Tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/sync/": {
            "post": {
                "operationId": "api_galaxy_content_v3_sync_sync",
                "description": "Trigger an asynchronous sync task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/content/{path}/v3/sync/config/": {
            "get": {
                "operationId": "api_galaxy_content_v3_sync_config_read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Content V3 Sync Config"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_galaxy_content_v3_sync_config_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Content V3 Sync Config"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}v3/tasks/": {
            "get": {
                "operationId": "tasks_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "child_tasks",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where child_tasks matches value"
                    },
                    {
                        "in": "query",
                        "name": "created_resources",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "finished_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where finished_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "logging_cid",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid matches value"
                    },
                    {
                        "in": "query",
                        "name": "logging_cid__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid contains value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-enc_args",
                                    "-enc_kwargs",
                                    "-error",
                                    "-finished_at",
                                    "-logging_cid",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-reserved_resources_record",
                                    "-started_at",
                                    "-state",
                                    "-unblocked_at",
                                    "-versions",
                                    "enc_args",
                                    "enc_kwargs",
                                    "error",
                                    "finished_at",
                                    "logging_cid",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "reserved_resources_record",
                                    "started_at",
                                    "state",
                                    "unblocked_at",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `state` - State\n* `-state` - State (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `logging_cid` - Logging cid\n* `-logging_cid` - Logging cid (descending)\n* `unblocked_at` - Unblocked at\n* `-unblocked_at` - Unblocked at (descending)\n* `started_at` - Started at\n* `-started_at` - Started at (descending)\n* `finished_at` - Finished at\n* `-finished_at` - Finished at (descending)\n* `error` - Error\n* `-error` - Error (descending)\n* `enc_args` - Enc args\n* `-enc_args` - Enc args (descending)\n* `enc_kwargs` - Enc kwargs\n* `-enc_kwargs` - Enc kwargs (descending)\n* `reserved_resources_record` - Reserved resources record\n* `-reserved_resources_record` - Reserved resources record (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "parent_task",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where parent_task matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources_record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where started_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "canceling",
                                "completed",
                                "failed",
                                "running",
                                "skipped",
                                "waiting"
                            ]
                        },
                        "description": "Filter results where state matches value\n\n* `waiting` - Waiting\n* `skipped` - Skipped\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `canceled` - Canceled\n* `canceling` - Canceling"
                    },
                    {
                        "in": "query",
                        "name": "state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where state is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where state not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "task_group",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where task_group matches value"
                    },
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "worker",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where worker matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where worker is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "worker__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where worker has a null value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskSummaryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}": {
            "get": {
                "operationId": "tasks_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tasks_cancel",
                "description": "This operation cancels a task.",
                "summary": "Cancel a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tasks_delete",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Delete a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/feature_flags_state/": {
            "get": {
                "operationId": "api_galaxy_feature_flags_state_get",
                "description": "A view class for displaying feature flags",
                "tags": [
                    "Api: Feature_Flags_State"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeatureFlagResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/access_policies/": {
            "get": {
                "operationId": "access_policies_list",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "List access policys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "customized",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where customized matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-creation_hooks",
                                    "-customized",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-queryset_scoping",
                                    "-statements",
                                    "-viewset_name",
                                    "creation_hooks",
                                    "customized",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "queryset_scoping",
                                    "statements",
                                    "viewset_name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `creation_hooks` - Creation hooks\n* `-creation_hooks` - Creation hooks (descending)\n* `statements` - Statements\n* `-statements` - Statements (descending)\n* `viewset_name` - Viewset name\n* `-viewset_name` - Viewset name (descending)\n* `customized` - Customized\n* `-customized` - Customized (descending)\n* `queryset_scoping` - Queryset scoping\n* `-queryset_scoping` - Queryset scoping (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "viewset_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where viewset_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccessPolicyResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{access_policy_href}": {
            "get": {
                "operationId": "access_policies_read",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Inspect an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "access_policies_update",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Update an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "access_policies_partial_update",
                "description": "ViewSet for AccessPolicy.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Update an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{access_policy_href}reset/": {
            "post": {
                "operationId": "access_policies_reset",
                "description": "Reset the access policy to its uncustomized default value.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/acs/file/file/": {
            "get": {
                "operationId": "acs_file_file_list",
                "description": "Alternate Content Source ViewSet for File\n\nACS support is provided as a tech preview in pulp_file.",
                "summary": "List file alternate content sources",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_refreshed",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "last_refreshed",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_refreshed` - Last refreshed\n* `-last_refreshed` - Last refreshed (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileAlternateContentSourceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "acs_file_file_create",
                "description": "Alternate Content Source ViewSet for File\n\nACS support is provided as a tech preview in pulp_file.",
                "summary": "Create a file alternate content source",
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}": {
            "get": {
                "operationId": "acs_file_file_read",
                "description": "Alternate Content Source ViewSet for File\n\nACS support is provided as a tech preview in pulp_file.",
                "summary": "Inspect a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "acs_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "acs_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "acs_file_file_delete",
                "description": "Trigger an asynchronous delete ACS task",
                "summary": "Delete a file alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}add_role/": {
            "post": {
                "operationId": "acs_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}list_roles/": {
            "get": {
                "operationId": "acs_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}my_permissions/": {
            "get": {
                "operationId": "acs_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}refresh/": {
            "post": {
                "operationId": "acs_file_file_refresh",
                "description": "Trigger an asynchronous task to create Alternate Content Source content.",
                "summary": "Refresh metadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_alternate_content_source_href}remove_role/": {
            "post": {
                "operationId": "acs_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/ansible/collections/": {
            "get": {
                "operationId": "ansible_collections_list",
                "description": "Viewset for Ansible Collections.",
                "summary": "List collections",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}": {
            "get": {
                "operationId": "ansible_collections_read",
                "description": "Viewset for Ansible Collections.",
                "summary": "Inspect a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}add_role/": {
            "post": {
                "operationId": "ansible_collections_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}list_roles/": {
            "get": {
                "operationId": "ansible_collections_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}my_permissions/": {
            "get": {
                "operationId": "ansible_collections_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}remove_role/": {
            "post": {
                "operationId": "ansible_collections_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/artifacts/": {
            "get": {
                "operationId": "artifacts_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List artifacts",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where md5 matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-file",
                                    "-md5",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-sha1",
                                    "-sha224",
                                    "-sha256",
                                    "-sha384",
                                    "-sha512",
                                    "-size",
                                    "-timestamp_of_interest",
                                    "file",
                                    "md5",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "sha1",
                                    "sha224",
                                    "sha256",
                                    "sha384",
                                    "sha512",
                                    "size",
                                    "timestamp_of_interest"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `file` - File\n* `-file` - File (descending)\n* `size` - Size\n* `-size` - Size (descending)\n* `md5` - Md5\n* `-md5` - Md5 (descending)\n* `sha1` - Sha1\n* `-sha1` - Sha1 (descending)\n* `sha224` - Sha224\n* `-sha224` - Sha224 (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `sha384` - Sha384\n* `-sha384` - Sha384 (descending)\n* `sha512` - Sha512\n* `-sha512` - Sha512 (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Artifacts have been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha1",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha1 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha224",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha224 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha384",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha384 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha512",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha512 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArtifactResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "artifacts_create",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Create an artifact",
                "tags": [
                    "Artifacts"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_href}": {
            "get": {
                "operationId": "artifacts_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect an artifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "artifacts_delete",
                "description": "Remove Artifact only if it is not associated with any Content.",
                "summary": "Delete an artifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/": {
            "get": {
                "operationId": "content_list",
                "description": "Endpoint to list all content.",
                "summary": "List content",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ansible.collection_deprecation",
                                "ansible.collection_mark",
                                "ansible.collection_signature",
                                "ansible.collection_version",
                                "ansible.namespace",
                                "ansible.role",
                                "container.blob",
                                "container.manifest",
                                "container.signature",
                                "container.tag",
                                "core.publishedmetadata",
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.publishedmetadata` - core.publishedmetadata\n* `ansible.role` - ansible.role\n* `ansible.collection_version` - ansible.collection_version\n* `ansible.collection_mark` - ansible.collection_mark\n* `ansible.collection_signature` - ansible.collection_signature\n* `ansible.namespace` - ansible.namespace\n* `ansible.collection_deprecation` - ansible.collection_deprecation\n* `container.blob` - container.blob\n* `container.manifest` - container.manifest\n* `container.tag` - container.tag\n* `container.signature` - container.signature\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ansible.collection_deprecation",
                                    "ansible.collection_mark",
                                    "ansible.collection_signature",
                                    "ansible.collection_version",
                                    "ansible.namespace",
                                    "ansible.role",
                                    "container.blob",
                                    "container.manifest",
                                    "container.signature",
                                    "container.tag",
                                    "core.publishedmetadata",
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.publishedmetadata` - core.publishedmetadata\n* `ansible.role` - ansible.role\n* `ansible.collection_version` - ansible.collection_version\n* `ansible.collection_mark` - ansible.collection_mark\n* `ansible.collection_signature` - ansible.collection_signature\n* `ansible.namespace` - ansible.namespace\n* `ansible.collection_deprecation` - ansible.collection_deprecation\n* `container.blob` - container.blob\n* `container.manifest` - container.manifest\n* `container.tag` - container.tag\n* `container.signature` - container.signature\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMultipleArtifactContentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/ansible/collection_deprecations/": {
            "get": {
                "operationId": "content_ansible_collection_deprecations_list",
                "description": "ViewSet for AnsibleCollectionDeprecated.",
                "summary": "List ansible collection deprecateds",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleCollectionDeprecatedResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_deprecations_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create an ansible collection deprecated",
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecated"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecated"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecated"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_collection_deprecated_href}": {
            "get": {
                "operationId": "content_ansible_collection_deprecations_read",
                "description": "ViewSet for AnsibleCollectionDeprecated.",
                "summary": "Inspect an ansible collection deprecated",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_collection_deprecated_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecatedResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/ansible/collection_marks/": {
            "get": {
                "operationId": "content_ansible_collection_marks_list",
                "description": "ViewSet for looking at mark objects for CollectionVersion content.",
                "summary": "List collection version marks",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "marked_collection",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter marks for collection version"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-value",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "value"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `value` - Value\n* `-value` - Value (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter marks by value"
                    },
                    {
                        "in": "query",
                        "name": "value__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where value is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Marks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionMarkResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_marks_create",
                "description": "ViewSet for looking at mark objects for CollectionVersion content.",
                "summary": "Create a collection version mark",
                "tags": [
                    "Content: Collection_Marks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionMark"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionMark"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionMark"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionMarkResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_mark_href}": {
            "get": {
                "operationId": "content_ansible_collection_marks_read",
                "description": "ViewSet for looking at mark objects for CollectionVersion content.",
                "summary": "Inspect a collection version mark",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_mark_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Marks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionMarkResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/ansible/collection_signatures/": {
            "get": {
                "operationId": "content_ansible_collection_signatures_list",
                "description": "ViewSet for looking at signature objects for CollectionVersion content.",
                "summary": "List collection version signatures",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-data",
                                    "-digest",
                                    "-pk",
                                    "-pubkey_fingerprint",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "data",
                                    "digest",
                                    "pk",
                                    "pubkey_fingerprint",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `data` - Data\n* `-data` - Data (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pubkey_fingerprint` - Pubkey fingerprint\n* `-pubkey_fingerprint` - Pubkey fingerprint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pubkey_fingerprint",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where pubkey_fingerprint matches value"
                    },
                    {
                        "in": "query",
                        "name": "pubkey_fingerprint__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where pubkey_fingerprint is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "signed_collection",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter signatures for collection version"
                    },
                    {
                        "in": "query",
                        "name": "signing_service",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter signatures produced by signature service"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionSignatureResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_signatures_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a collection version signature",
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionSignature"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionSignature"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_signature_href}": {
            "get": {
                "operationId": "content_ansible_collection_signatures_read",
                "description": "ViewSet for looking at signature objects for CollectionVersion content.",
                "summary": "Inspect a collection version signature",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionSignatureResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/ansible/collection_versions/": {
            "get": {
                "operationId": "content_ansible_collection_versions_list",
                "description": "ViewSet for Ansible Collection.",
                "summary": "List collection versions",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_versions_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a collection version",
                "tags": [
                    "Content: Collection_Versions"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/ansible/namespaces/": {
            "get": {
                "operationId": "content_ansible_namespaces_list",
                "description": "ViewSet for AnsibleNamespace.",
                "summary": "List ansible namespace metadatas",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_namespace_metadata_href}": {
            "get": {
                "operationId": "content_ansible_namespaces_read",
                "description": "ViewSet for AnsibleNamespace.",
                "summary": "Inspect an ansible namespace metadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_namespace_metadata_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_namespace_metadata_href}avatar/": {
            "get": {
                "operationId": "content_ansible_namespaces_avatar",
                "description": "Get the logo for the this namespace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_namespace_metadata_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "302": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/ansible/roles/": {
            "get": {
                "operationId": "content_ansible_roles_list",
                "description": "ViewSet for Role.",
                "summary": "List roles",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where namespace matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.RoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_roles_create",
                "description": "ViewSet for Role.",
                "summary": "Create a role",
                "tags": [
                    "Content: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}": {
            "get": {
                "operationId": "content_ansible_roles_read",
                "description": "ViewSet for Role.",
                "summary": "Inspect a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/container/blobs/": {
            "get": {
                "operationId": "content_container_blobs_list",
                "description": "ViewSet for Blobs.",
                "summary": "List blobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where digest matches value"
                    },
                    {
                        "in": "query",
                        "name": "digest__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where digest is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-digest",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "digest",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Blobs"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.BlobResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_blob_href}": {
            "get": {
                "operationId": "content_container_blobs_read",
                "description": "ViewSet for Blobs.",
                "summary": "Inspect a blob",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_blob_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Blobs"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.BlobResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/container/manifests/": {
            "get": {
                "operationId": "content_container_manifests_list",
                "description": "ViewSet for Manifest.",
                "summary": "List manifests",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where digest matches value"
                    },
                    {
                        "in": "query",
                        "name": "digest__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where digest is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_bootable",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_bootable matches value"
                    },
                    {
                        "in": "query",
                        "name": "is_flatpak",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_flatpak matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "media_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "application/vnd.docker.distribution.manifest.list.v2+json",
                                    "application/vnd.docker.distribution.manifest.v1+json",
                                    "application/vnd.docker.distribution.manifest.v2+json",
                                    "application/vnd.oci.image.index.v1+json",
                                    "application/vnd.oci.image.manifest.v1+json"
                                ]
                            }
                        },
                        "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-annotations",
                                    "-digest",
                                    "-is_bootable",
                                    "-is_flatpak",
                                    "-labels",
                                    "-media_type",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-schema_version",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "annotations",
                                    "digest",
                                    "is_bootable",
                                    "is_flatpak",
                                    "labels",
                                    "media_type",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "schema_version",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `schema_version` - Schema version\n* `-schema_version` - Schema version (descending)\n* `media_type` - Media type\n* `-media_type` - Media type (descending)\n* `annotations` - Annotations\n* `-annotations` - Annotations (descending)\n* `labels` - Labels\n* `-labels` - Labels (descending)\n* `is_bootable` - Is bootable\n* `-is_bootable` - Is bootable (descending)\n* `is_flatpak` - Is flatpak\n* `-is_flatpak` - Is flatpak (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Manifests"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ManifestResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_manifest_href}": {
            "get": {
                "operationId": "content_container_manifests_read",
                "description": "ViewSet for Manifest.",
                "summary": "Inspect a manifest",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_manifest_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Manifests"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ManifestResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/container/signatures/": {
            "get": {
                "operationId": "content_container_signatures_list",
                "description": "ViewSet for image signatures.",
                "summary": "List manifest signatures",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where digest matches value"
                    },
                    {
                        "in": "query",
                        "name": "digest__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where digest is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "key_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where key_id matches value"
                    },
                    {
                        "in": "query",
                        "name": "key_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where key_id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "manifest",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-creator",
                                    "-data",
                                    "-digest",
                                    "-key_id",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp",
                                    "-timestamp_of_interest",
                                    "-type",
                                    "-upstream_id",
                                    "creator",
                                    "data",
                                    "digest",
                                    "key_id",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp",
                                    "timestamp_of_interest",
                                    "type",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `type` - Type\n* `-type` - Type (descending)\n* `key_id` - Key id\n* `-key_id` - Key id (descending)\n* `timestamp` - Timestamp\n* `-timestamp` - Timestamp (descending)\n* `creator` - Creator\n* `-creator` - Creator (descending)\n* `data` - Data\n* `-data` - Data (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Signatures"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ManifestSignatureResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_manifest_signature_href}": {
            "get": {
                "operationId": "content_container_signatures_read",
                "description": "ViewSet for image signatures.",
                "summary": "Inspect a manifest signature",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_manifest_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Signatures"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ManifestSignatureResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/container/tags/": {
            "get": {
                "operationId": "content_container_tags_list",
                "description": "ViewSet for Tag.",
                "summary": "List tags",
                "parameters": [
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "media_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "application/vnd.docker.distribution.manifest.list.v2+json",
                                    "application/vnd.docker.distribution.manifest.v1+json",
                                    "application/vnd.docker.distribution.manifest.v2+json",
                                    "application/vnd.oci.image.index.v1+json",
                                    "application/vnd.oci.image.manifest.v1+json"
                                ]
                            }
                        },
                        "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.TagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_tag_href}": {
            "get": {
                "operationId": "content_container_tags_read",
                "description": "ViewSet for Tag.",
                "summary": "Inspect a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_tag_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.TagResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/content/file/files/": {
            "get": {
                "operationId": "content_file_files_list",
                "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.",
                "summary": "List file contents",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-digest",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-relative_path",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "digest",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "relative_path",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `relative_path` - Relative path\n* `-relative_path` - Relative path (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "relative_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where relative_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Files"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileContentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_file_files_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a file content",
                "tags": [
                    "Content: Files"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_content_href}": {
            "get": {
                "operationId": "content_file_files_read",
                "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.",
                "summary": "Inspect a file content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_content_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Files"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileContentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/": {
            "get": {
                "operationId": "contentguards_list",
                "description": "Endpoint to list all contentguards.",
                "summary": "List content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "certguard.rhsm",
                                "certguard.x509",
                                "core.composite",
                                "core.content_redirect",
                                "core.header",
                                "core.rbac"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.rbac` - core.rbac\n* `core.content_redirect` - core.content_redirect\n* `core.header` - core.header\n* `core.composite` - core.composite\n* `certguard.rhsm` - certguard.rhsm\n* `certguard.x509` - certguard.x509"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "certguard.rhsm",
                                    "certguard.x509",
                                    "core.composite",
                                    "core.content_redirect",
                                    "core.header",
                                    "core.rbac"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.rbac` - core.rbac\n* `core.content_redirect` - core.content_redirect\n* `core.header` - core.header\n* `core.composite` - core.composite\n* `certguard.rhsm` - certguard.rhsm\n* `certguard.x509` - certguard.x509",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/certguard/rhsm/": {
            "get": {
                "operationId": "contentguards_certguard_rhsm_list",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "List rhsm cert guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcertguard.RHSMCertGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_certguard_rhsm_create",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Create a rhsm cert guard",
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{certguard_r_h_s_m_cert_guard_href}": {
            "get": {
                "operationId": "contentguards_certguard_rhsm_read",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Inspect a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_certguard_rhsm_update",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Update a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.RHSMCertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_certguard_rhsm_partial_update",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Update a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.RHSMCertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.RHSMCertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.RHSMCertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_certguard_rhsm_delete",
                "description": "RHSMCertGuard API Viewsets.",
                "summary": "Delete a rhsm cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_r_h_s_m_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rhsm"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/certguard/x509/": {
            "get": {
                "operationId": "contentguards_certguard_x509_list",
                "description": "X509CertGuard API Viewsets.",
                "summary": "List x509 cert guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcertguard.X509CertGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_certguard_x509_create",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Create a x509 cert guard",
                "tags": [
                    "Contentguards: X509"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{certguard_x509_cert_guard_href}": {
            "get": {
                "operationId": "contentguards_certguard_x509_read",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Inspect a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_certguard_x509_update",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Update a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/certguard.X509CertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_certguard_x509_partial_update",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Update a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.X509CertGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.X509CertGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcertguard.X509CertGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_certguard_x509_delete",
                "description": "X509CertGuard API Viewsets.",
                "summary": "Delete a x509 cert guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certguard_x509_cert_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: X509"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/core/composite/": {
            "get": {
                "operationId": "contentguards_core_composite_list",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "List composite content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompositeContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_composite_create",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Create a composite content guard",
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_composite_read",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Inspect a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_composite_update",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Update a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_composite_partial_update",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Update a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_composite_delete",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Delete a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{composite_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_composite_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_composite_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_composite_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_composite_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/core/content_redirect/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_list",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "List content redirect content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContentRedirectContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_content_redirect_create",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Create a content redirect content guard",
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_content_redirect_read",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Inspect a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_content_redirect_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Update a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_content_redirect_partial_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Update a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_content_redirect_delete",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Delete a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_content_redirect_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_content_redirect_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/core/header/": {
            "get": {
                "operationId": "contentguards_core_header_list",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "List header content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedHeaderContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_header_create",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Create a header content guard",
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_header_read",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Inspect a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_header_update",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Update a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_header_partial_update",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Update a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_header_delete",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Delete a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{header_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_header_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_header_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_header_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_header_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/contentguards/core/rbac/": {
            "get": {
                "operationId": "contentguards_core_rbac_list",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "List rbac content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRBACContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_rbac_create",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Create a rbac content guard",
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_rbac_read",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Inspect a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_rbac_update",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Update a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_rbac_partial_update",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Update a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_rbac_delete",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Delete a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_rbac_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_rbac_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_rbac_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_rbac_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/distributions/": {
            "get": {
                "operationId": "distributions_list",
                "description": "Provides base viewset for Distributions.",
                "summary": "List distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ansible.ansible",
                                "container.container",
                                "container.pull-through",
                                "core.artifact",
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.artifact` - core.artifact\n* `ansible.ansible` - ansible.ansible\n* `container.pull-through` - container.pull-through\n* `container.container` - container.container\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ansible.ansible",
                                    "container.container",
                                    "container.pull-through",
                                    "core.artifact",
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.artifact` - core.artifact\n* `ansible.ansible` - ansible.ansible\n* `container.pull-through` - container.pull-through\n* `container.container` - container.container\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/distributions/ansible/ansible/": {
            "get": {
                "operationId": "distributions_ansible_ansible_list",
                "description": "ViewSet for Ansible Distributions.",
                "summary": "List ansible distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_ansible_ansible_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create an ansible distribution",
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_ansible_ansible_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_ansible_ansible_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_ansible_ansible_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_ansible_ansible_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_ansible_ansible_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_ansible_ansible_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/distributions/container/container/": {
            "get": {
                "operationId": "distributions_container_container_list",
                "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.",
                "summary": "List container distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "namespace__name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-description",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-private",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "description",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "private",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `private` - Private\n* `-private` - Private (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_container_container_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a container distribution",
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}": {
            "get": {
                "operationId": "distributions_container_container_read",
                "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.",
                "summary": "Inspect a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_container_container_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_container_container_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_container_container_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_container_container_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_container_container_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_container_container_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_container_container_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_container_container_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_container_container_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/distributions/container/pull-through/": {
            "get": {
                "operationId": "distributions_container_pull_through_list",
                "description": "A special pull-through Container Distribution that will reference distributions serving content.",
                "summary": "List container pull through distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerPullThroughDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_container_pull_through_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a container pull through distribution",
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}": {
            "get": {
                "operationId": "distributions_container_pull_through_read",
                "description": "A special pull-through Container Distribution that will reference distributions serving content.",
                "summary": "Inspect a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPullThroughDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_container_pull_through_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_container_pull_through_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_container_pull_through_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container pull through distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_container_pull_through_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_container_pull_through_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_container_pull_through_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_container_pull_through_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_container_pull_through_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_container_pull_through_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/distributions/core/artifacts/": {
            "get": {
                "operationId": "distributions_core_artifacts_list",
                "description": "ViewSet for ArtifactDistribution.",
                "summary": "List artifact distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArtifactDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_distribution_href}": {
            "get": {
                "operationId": "distributions_core_artifacts_read",
                "description": "ViewSet for ArtifactDistribution.",
                "summary": "Inspect an artifact distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/distributions/file/file/": {
            "get": {
                "operationId": "distributions_file_file_list",
                "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.",
                "summary": "List file distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_file_file_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a file distribution",
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}": {
            "get": {
                "operationId": "distributions_file_file_read",
                "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.",
                "summary": "Inspect a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_file_file_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a file distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_file_file_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_file_file_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/docs/api.json": {
            "get": {
                "operationId": "docs_api.json_get",
                "description": "Control authentication with GALAXY_API_SPEC_REQUIRE_AUTHENTICATION\napply to galaxy_ng openapi endpoints and monkey-patch pulp openapi endpoints.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en-us",
                                "es",
                                "fr",
                                "ja",
                                "ko",
                                "nl",
                                "zh-hans"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Docs: Api.Json"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/docs/api.yaml": {
            "get": {
                "operationId": "docs_api.yaml_get",
                "description": "Control authentication with GALAXY_API_SPEC_REQUIRE_AUTHENTICATION\napply to galaxy_ng openapi endpoints and monkey-patch pulp openapi endpoints.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en-us",
                                "es",
                                "fr",
                                "ja",
                                "ko",
                                "nl",
                                "zh-hans"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Docs: Api.Yaml"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/domains/": {
            "get": {
                "operationId": "domains_list",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "List domains",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-hide_guarded_distributions",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-redirect_to_object_storage",
                                    "-storage_class",
                                    "-storage_settings",
                                    "description",
                                    "hide_guarded_distributions",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "redirect_to_object_storage",
                                    "storage_class",
                                    "storage_settings"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `storage_class` - Storage class\n* `-storage_class` - Storage class (descending)\n* `storage_settings` - Storage settings\n* `-storage_settings` - Storage settings (descending)\n* `redirect_to_object_storage` - Redirect to object storage\n* `-redirect_to_object_storage` - Redirect to object storage (descending)\n* `hide_guarded_distributions` - Hide guarded distributions\n* `-hide_guarded_distributions` - Hide guarded distributions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDomainResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "domains_create",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Create a domain",
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{domain_href}": {
            "get": {
                "operationId": "domains_read",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Inspect a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "domains_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "domains_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "domains_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/exporters/core/filesystem/": {
            "get": {
                "operationId": "exporters_core_filesystem_list",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "List filesystem exporters",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-method",
                                    "-name",
                                    "-path",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "method",
                                    "name",
                                    "path",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `path` - Path\n* `-path` - Path (descending)\n* `method` - Method\n* `-method` - Method (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFilesystemExporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_filesystem_create",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "Create a filesystem exporter",
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{filesystem_exporter_href}exports/": {
            "get": {
                "operationId": "exporters_core_filesystem_exports_list",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "List filesystem exports",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFilesystemExportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_filesystem_exports_create",
                "description": "Trigger an asynchronous task to export files to the filesystem",
                "summary": "Create a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{filesystem_filesystem_export_href}": {
            "get": {
                "operationId": "exporters_core_filesystem_exports_read",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "Inspect a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_filesystem_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_filesystem_exports_delete",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "Delete a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_filesystem_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{filesystem_exporter_href}": {
            "get": {
                "operationId": "exporters_core_filesystem_read",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "Inspect a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "exporters_core_filesystem_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "exporters_core_filesystem_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_filesystem_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/exporters/core/pulp/": {
            "get": {
                "operationId": "exporters_core_pulp_list",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "List pulp exporters",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-path",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "name",
                                    "path",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `path` - Path\n* `-path` - Path (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpExporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_pulp_create",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "Create a pulp exporter",
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_exporter_href}exports/": {
            "get": {
                "operationId": "exporters_core_pulp_exports_list",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "List pulp exports",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpExportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_pulp_exports_create",
                "description": "Trigger an asynchronous task to export a set of repositories",
                "summary": "Create a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_pulp_export_href}": {
            "get": {
                "operationId": "exporters_core_pulp_exports_read",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "Inspect a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_pulp_exports_delete",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "Delete a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_exporter_href}": {
            "get": {
                "operationId": "exporters_core_pulp_read",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "Inspect a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "exporters_core_pulp_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "exporters_core_pulp_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_pulp_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "ViewSet for Group.",
                "summary": "List groups",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where id matches value"
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-id",
                                    "-name",
                                    "-pk",
                                    "id",
                                    "name",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `id` - Id\n* `-id` - Id (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_create",
                "description": "ViewSet for Group.",
                "summary": "Create a group",
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}roles/": {
            "get": {
                "operationId": "groups_roles_list",
                "description": "ViewSet for GroupRole.",
                "summary": "List group roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content_object",
                        "schema": {
                            "type": "string"
                        },
                        "description": "content_object"
                    },
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-pk",
                                    "-pulp_created",
                                    "-role",
                                    "description",
                                    "pk",
                                    "pulp_created",
                                    "role"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `role` - Role\n* `-role` - Role (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_roles_create",
                "description": "ViewSet for GroupRole.",
                "summary": "Create a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{groups_group_role_href}": {
            "get": {
                "operationId": "groups_roles_read",
                "description": "ViewSet for GroupRole.",
                "summary": "Inspect a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_group_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_roles_delete",
                "description": "ViewSet for GroupRole.",
                "summary": "Delete a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_group_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}": {
            "get": {
                "operationId": "groups_read",
                "description": "ViewSet for Group.",
                "summary": "Inspect a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "groups_update",
                "description": "ViewSet for Group.",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "groups_partial_update",
                "description": "ViewSet for Group.",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_delete",
                "description": "ViewSet for Group.",
                "summary": "Delete a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}add_role/": {
            "post": {
                "operationId": "groups_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}list_roles/": {
            "get": {
                "operationId": "groups_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}my_permissions/": {
            "get": {
                "operationId": "groups_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}remove_role/": {
            "post": {
                "operationId": "groups_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/importers/core/pulp/": {
            "get": {
                "operationId": "importers_core_pulp_list",
                "description": "ViewSet for PulpImporters.",
                "summary": "List pulp importers",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpImporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "importers_core_pulp_create",
                "description": "ViewSet for PulpImporters.",
                "summary": "Create a pulp importer",
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_importer_href}imports/": {
            "get": {
                "operationId": "importers_core_pulp_imports_list",
                "description": "ViewSet for PulpImports.",
                "summary": "List pulp imports",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedImportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "importers_core_pulp_imports_create",
                "description": "Trigger an asynchronous task to import a Pulp export.",
                "summary": "Create a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_pulp_import_href}": {
            "get": {
                "operationId": "importers_core_pulp_imports_read",
                "description": "ViewSet for PulpImports.",
                "summary": "Inspect a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "importers_core_pulp_imports_delete",
                "description": "ViewSet for PulpImports.",
                "summary": "Delete a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_importer_href}": {
            "get": {
                "operationId": "importers_core_pulp_read",
                "description": "ViewSet for PulpImporters.",
                "summary": "Inspect a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "importers_core_pulp_update",
                "description": "ViewSet for PulpImporters.",
                "summary": "Update a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "importers_core_pulp_partial_update",
                "description": "ViewSet for PulpImporters.",
                "summary": "Update a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "importers_core_pulp_delete",
                "description": "ViewSet for PulpImporters.",
                "summary": "Delete a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/importers/core/pulp/import-check/": {
            "post": {
                "operationId": "pulp_import_check_post",
                "description": "Evaluates validity of proposed PulpImport parameters 'toc', 'path', and 'repo_mapping'.\n\n* Checks that toc, path are in ALLOWED_IMPORT_PATHS\n* if ALLOWED:\n  * Checks that toc, path exist and are readable\n  * If toc specified, checks that containing dir is writeable\n* Checks that repo_mapping is valid JSON",
                "summary": "Validate the parameters to be used for a PulpImport call",
                "tags": [
                    "Importers: Pulp Import-Check"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImportCheckResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/orphans/": {
            "delete": {
                "operationId": "orphans_delete",
                "description": "DEPRECATED! Trigger an asynchronous task that deletes all orphaned content and artifacts. Use the `POST /pulp/api/v3/orphans/cleanup/` call instead.",
                "summary": "Delete orphans",
                "tags": [
                    "Orphans"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/orphans/cleanup/": {
            "post": {
                "operationId": "orphans_cleanup_cleanup",
                "description": "Trigger an asynchronous orphan cleanup operation.",
                "tags": [
                    "Orphans: Cleanup"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/publications/": {
            "get": {
                "operationId": "publications_list",
                "description": "A base class for any publication viewset.",
                "summary": "List publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/publications/file/file/": {
            "get": {
                "operationId": "publications_file_file_list",
                "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.",
                "summary": "List file publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FilePublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "publications_file_file_create",
                "description": "Trigger an asynchronous task to publish file content.",
                "summary": "Create a file publication",
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}": {
            "get": {
                "operationId": "publications_file_file_read",
                "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.",
                "summary": "Inspect a file publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FilePublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "publications_file_file_delete",
                "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.",
                "summary": "Delete a file publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{file_file_publication_href}add_role/": {
            "post": {
                "operationId": "publications_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}list_roles/": {
            "get": {
                "operationId": "publications_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}my_permissions/": {
            "get": {
                "operationId": "publications_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_publication_href}remove_role/": {
            "post": {
                "operationId": "publications_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/pulp_ansible/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_namespaces_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List namespaces",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.NamespaceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/pulp_ansible/tags/": {
            "get": {
                "operationId": "pulp_ansible_tags_list",
                "description": "ViewSet for Tag models.",
                "summary": "List tags",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/pulp_container/namespaces/": {
            "get": {
                "operationId": "pulp_container_namespaces_list",
                "description": "ViewSet for ContainerNamespaces.",
                "summary": "List container namespaces",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerNamespaceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_container_namespaces_create",
                "description": "ViewSet for ContainerNamespaces.",
                "summary": "Create a container namespace",
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerNamespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerNamespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerNamespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerNamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}": {
            "get": {
                "operationId": "pulp_container_namespaces_read",
                "description": "ViewSet for ContainerNamespaces.",
                "summary": "Inspect a container namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerNamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_container_namespaces_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container namespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}add_role/": {
            "post": {
                "operationId": "pulp_container_namespaces_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}list_roles/": {
            "get": {
                "operationId": "pulp_container_namespaces_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}my_permissions/": {
            "get": {
                "operationId": "pulp_container_namespaces_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_namespace_href}remove_role/": {
            "post": {
                "operationId": "pulp_container_namespaces_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_namespace_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Container: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/": {
            "get": {
                "operationId": "remotes_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ansible.collection",
                                "ansible.git",
                                "ansible.role",
                                "container.container",
                                "container.remote",
                                "file.file",
                                "galaxy.remote"
                            ]
                        },
                        "description": "Pulp type\n\n* `galaxy.remote` - galaxy.remote\n* `ansible.role` - ansible.role\n* `ansible.collection` - ansible.collection\n* `ansible.git` - ansible.git\n* `container.container` - container.container\n* `container.remote` - container.remote\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ansible.collection",
                                    "ansible.git",
                                    "ansible.role",
                                    "container.container",
                                    "container.remote",
                                    "file.file",
                                    "galaxy.remote"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `galaxy.remote` - galaxy.remote\n* `ansible.role` - ansible.role\n* `ansible.collection` - ansible.collection\n* `ansible.git` - ansible.git\n* `container.container` - container.container\n* `container.remote` - container.remote\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/ansible/collection/": {
            "get": {
                "operationId": "remotes_ansible_collection_list",
                "description": "ViewSet for Collection Remotes.",
                "summary": "List collection remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-auth_url",
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-requirements_file",
                                    "-signed_only",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-sync_dependencies",
                                    "-tls_validation",
                                    "-token",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "auth_url",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "requirements_file",
                                    "signed_only",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "sync_dependencies",
                                    "tls_validation",
                                    "token",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `requirements_file` - Requirements file\n* `-requirements_file` - Requirements file (descending)\n* `auth_url` - Auth url\n* `-auth_url` - Auth url (descending)\n* `token` - Token\n* `-token` - Token (descending)\n* `sync_dependencies` - Sync dependencies\n* `-sync_dependencies` - Sync dependencies (descending)\n* `signed_only` - Signed only\n* `-signed_only` - Signed only (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where url matches value"
                    },
                    {
                        "in": "query",
                        "name": "url__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where url contains value"
                    },
                    {
                        "in": "query",
                        "name": "url__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where url contains value"
                    },
                    {
                        "in": "query",
                        "name": "url__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where url is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_collection_create",
                "description": "ViewSet for Collection Remotes.",
                "summary": "Create a collection remote",
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_ansible_collection_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_ansible_collection_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_ansible_collection_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_ansible_collection_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_ansible_collection_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_ansible_collection_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/ansible/git/": {
            "get": {
                "operationId": "remotes_ansible_git_list",
                "description": "ViewSet for Ansible Remotes.\n\nThis is a tech preview feature. The functionality may change in the future.",
                "summary": "List git remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.GitRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_git_create",
                "description": "ViewSet for Ansible Remotes.\n\nThis is a tech preview feature. The functionality may change in the future.",
                "summary": "Create a git remote",
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.GitRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_git_read",
                "description": "ViewSet for Ansible Remotes.\n\nThis is a tech preview feature. The functionality may change in the future.",
                "summary": "Inspect a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.GitRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_git_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_git_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.GitRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.GitRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.GitRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_git_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_ansible_git_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_ansible_git_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_ansible_git_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_ansible_git_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_ansible_git_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_ansible_git_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/ansible/role/": {
            "get": {
                "operationId": "remotes_ansible_role_list",
                "description": "ViewSet for Role Remotes.",
                "summary": "List role remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.RoleRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_role_create",
                "description": "ViewSet for Role Remotes.",
                "summary": "Create a role remote",
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_role_read",
                "description": "ViewSet for Role Remotes.",
                "summary": "Inspect a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_role_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_role_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_role_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_ansible_role_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_ansible_role_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_ansible_role_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_ansible_role_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_ansible_role_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_ansible_role_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/container/container/": {
            "get": {
                "operationId": "remotes_container_container_list",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "summary": "List container remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_container_container_create",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "summary": "Create a container remote",
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_container_container_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_container_container_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_container_container_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_container_container_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_container_container_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_container_container_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/container/pull-through/": {
            "get": {
                "operationId": "remotes_container_pull_through_list",
                "description": "A Container Remote referencing a remote registry used as a source for the pull-through caching.",
                "summary": "List container pull through remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerPullThroughRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_container_pull_through_create",
                "description": "A Container Remote referencing a remote registry used as a source for the pull-through caching.",
                "summary": "Create a container pull through remote",
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPullThroughRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}": {
            "get": {
                "operationId": "remotes_container_pull_through_read",
                "description": "A Container Remote referencing a remote registry used as a source for the pull-through caching.",
                "summary": "Inspect a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPullThroughRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_container_pull_through_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPullThroughRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_container_pull_through_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPullThroughRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_container_pull_through_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container pull through remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_container_pull_through_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_container_pull_through_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_container_pull_through_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_container_pull_through_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_container_pull_through_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_pull_through_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_container_pull_through_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_pull_through_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Pull-Through"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/remotes/file/file/": {
            "get": {
                "operationId": "remotes_file_file_list",
                "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "summary": "List file remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_file_file_create",
                "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "summary": "Create a file remote",
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}": {
            "get": {
                "operationId": "remotes_file_file_read",
                "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "summary": "Inspect a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_file_file_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a file remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_file_file_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_file_file_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repair/": {
            "post": {
                "operationId": "repair_post",
                "description": "Trigger an asynchronous task that checks for missing or corrupted artifacts, and attempts to redownload them.",
                "summary": "Repair Artifact Storage",
                "tags": [
                    "Repair"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repositories/": {
            "get": {
                "operationId": "repositories_list",
                "description": "Endpoint to list all repositories.",
                "summary": "List repositories",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ansible.ansible",
                                "container.container",
                                "container.container-push",
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `ansible.ansible` - ansible.ansible\n* `container.container` - container.container\n* `container.container-push` - container.container-push\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ansible.ansible",
                                    "container.container",
                                    "container.container-push",
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `ansible.ansible` - ansible.ansible\n* `container.container` - container.container\n* `container.container-push` - container.container-push\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repositories/ansible/ansible/": {
            "get": {
                "operationId": "repositories_ansible_ansible_list",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "List ansible repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_ansible_ansible_create",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "Create an ansible repository",
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}": {
            "get": {
                "operationId": "repositories_ansible_ansible_read",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "Inspect an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_ansible_ansible_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_ansible_ansible_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_ansible_ansible_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_ansible_ansible_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}copy_collection_version/": {
            "post": {
                "operationId": "repositories_ansible_ansible_copy_collection_version",
                "description": "Trigger an asynchronous task to copy collection versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_ansible_ansible_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}mark/": {
            "post": {
                "operationId": "repositories_ansible_ansible_mark",
                "description": "Trigger an asynchronous task to mark Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}modify/": {
            "post": {
                "operationId": "repositories_ansible_ansible_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}move_collection_version/": {
            "post": {
                "operationId": "repositories_ansible_ansible_move_collection_version",
                "description": "Trigger an asynchronous task to move collection versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_ansible_ansible_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}rebuild_metadata/": {
            "post": {
                "operationId": "repositories_ansible_ansible_rebuild_metadata",
                "description": "Trigger an asynchronous task to rebuild Ansible content meta.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_ansible_ansible_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_ansible_ansible_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}sign/": {
            "post": {
                "operationId": "repositories_ansible_ansible_sign",
                "description": "Trigger an asynchronous task to sign Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySignature"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySignature"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySignature"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}sync/": {
            "post": {
                "operationId": "repositories_ansible_ansible_sync",
                "description": "Trigger an asynchronous task to sync Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}unmark/": {
            "post": {
                "operationId": "repositories_ansible_ansible_unmark",
                "description": "Trigger an asynchronous task to unmark Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_ansible_ansible_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}versions/": {
            "get": {
                "operationId": "repositories_ansible_ansible_versions_list",
                "description": "AnsibleRepositoryVersion represents a single file repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}": {
            "get": {
                "operationId": "repositories_ansible_ansible_versions_read",
                "description": "AnsibleRepositoryVersion represents a single file repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_ansible_ansible_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}rebuild_metadata/": {
            "post": {
                "operationId": "repositories_ansible_ansible_versions_rebuild_metadata",
                "description": "Trigger an asynchronous task to rebuild Ansible content meta.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_ansible_ansible_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repositories/container/container/": {
            "get": {
                "operationId": "repositories_container_container_list",
                "description": "ViewSet for container repo.",
                "summary": "List container repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_container_container_create",
                "description": "ViewSet for container repo.",
                "summary": "Create a container repository",
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repositories/container/container-push/": {
            "get": {
                "operationId": "repositories_container_container_push_list",
                "description": "ViewSet for a container push repository.\n\nPOST and DELETE are disallowed because a push repository is tightly coupled with a\nContainerDistribution which handles it automatically.\nCreated - during push operation, removed - with ContainerDistribution removal.",
                "summary": "List container push repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedcontainer.ContainerPushRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}": {
            "get": {
                "operationId": "repositories_container_container_push_read",
                "description": "ViewSet for a container push repository.\n\nPOST and DELETE are disallowed because a push repository is tightly coupled with a\nContainerDistribution which handles it automatically.\nCreated - during push operation, removed - with ContainerDistribution removal.",
                "summary": "Inspect a container push repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_container_container_push_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container push repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_container_container_push_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container push repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_container_container_push_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_container_container_push_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_container_container_push_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}remove_image/": {
            "post": {
                "operationId": "repositories_container_container_push_remove_image",
                "description": "Trigger an asynchronous task to remove a manifest and all its associated data by a digest",
                "summary": "Delete an image from a repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_container_container_push_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}remove_signatures/": {
            "post": {
                "operationId": "repositories_container_container_push_remove_signatures",
                "description": "Create a task which deletes signatures by the passed key_id.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSignatures"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSignatures"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveSignatures"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveSignaturesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}sign/": {
            "post": {
                "operationId": "repositories_container_container_push_sign",
                "description": "Trigger an asynchronous task to sign content.",
                "summary": "Sign images in the repo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}tag/": {
            "post": {
                "operationId": "repositories_container_container_push_tag",
                "description": "Trigger an asynchronous task to tag an image in the repository",
                "summary": "Create a Tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}untag/": {
            "post": {
                "operationId": "repositories_container_container_push_untag",
                "description": "Trigger an asynchronous task to untag an image in the repository",
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_href}versions/": {
            "get": {
                "operationId": "repositories_container_container_push_versions_list",
                "description": "ContainerPushRepositoryVersion represents a single container push repository version.\n\nRepository versions of a push repository are not allowed to be deleted. Versioning of such\nrepositories, as well as creation/removal, happens automatically without explicit user actions.\nUsers could make a repository not functional by accident if allowed to delete repository\nversions.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_version_href}": {
            "get": {
                "operationId": "repositories_container_container_push_versions_read",
                "description": "ContainerPushRepositoryVersion represents a single container push repository version.\n\nRepository versions of a push repository are not allowed to be deleted. Versioning of such\nrepositories, as well as creation/removal, happens automatically without explicit user actions.\nUsers could make a repository not functional by accident if allowed to delete repository\nversions.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_container_container_push_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_push_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_container_container_push_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container-Push Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}": {
            "get": {
                "operationId": "repositories_container_container_read",
                "description": "ViewSet for container repo.",
                "summary": "Inspect a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_container_container_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_container_container_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_container_container_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a container repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}add/": {
            "post": {
                "operationId": "repositories_container_container_add",
                "description": "Trigger an asynchronous task to recursively add container content.",
                "summary": "Add content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_container_container_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}build_image/": {
            "post": {
                "operationId": "repositories_container_container_build_image",
                "description": "Trigger an asynchronous task to build an OCI image from a Containerfile. A new repository version is created with the new image and tag. This API is in tech preview. Backwards compatibility when upgrading is not guaranteed.",
                "summary": "Build an Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OCIBuildImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OCIBuildImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}copy_manifests/": {
            "post": {
                "operationId": "repositories_container_container_copy_manifests",
                "description": "Trigger an asynchronous task to copy manifests",
                "summary": "Copy manifests",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}copy_tags/": {
            "post": {
                "operationId": "repositories_container_container_copy_tags",
                "description": "Trigger an asynchronous task to copy tags",
                "summary": "Copy tags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_container_container_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_container_container_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}remove/": {
            "post": {
                "operationId": "repositories_container_container_remove",
                "description": "Trigger an async task to recursively remove container content.",
                "summary": "Remove content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_container_container_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_container_container_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}sign/": {
            "post": {
                "operationId": "repositories_container_container_sign",
                "description": "Trigger an asynchronous task to sign content.",
                "summary": "Sign images in the repo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySign"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}sync/": {
            "post": {
                "operationId": "repositories_container_container_sync",
                "description": "Trigger an asynchronous task to sync content.",
                "summary": "Sync from a remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContainerRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}tag/": {
            "post": {
                "operationId": "repositories_container_container_tag",
                "description": "Trigger an asynchronous task to tag an image in the repository",
                "summary": "Create a Tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_container_container_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}untag/": {
            "post": {
                "operationId": "repositories_container_container_untag",
                "description": "Trigger an asynchronous task to untag an image in the repository",
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_href}versions/": {
            "get": {
                "operationId": "repositories_container_container_versions_list",
                "description": "ContainerRepositoryVersion represents a single container repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_version_href}": {
            "get": {
                "operationId": "repositories_container_container_versions_read",
                "description": "ContainerRepositoryVersion represents a single container repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_container_container_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_container_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_container_container_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repositories/file/file/": {
            "get": {
                "operationId": "repositories_file_file_list",
                "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "summary": "List file repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedfile.FileRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_file_file_create",
                "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "summary": "Create a file repository",
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}": {
            "get": {
                "operationId": "repositories_file_file_read",
                "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "summary": "Inspect a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_file_file_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_file_file_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_file_file_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a file repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_file_file_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_file_file_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}modify/": {
            "post": {
                "operationId": "repositories_file_file_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_file_file_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_file_file_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_file_file_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}sync/": {
            "post": {
                "operationId": "repositories_file_file_sync",
                "description": "Trigger an asynchronous task to sync file content.",
                "summary": "Sync from a remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_file_file_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_href}versions/": {
            "get": {
                "operationId": "repositories_file_file_versions_list",
                "description": "\nFileRepositoryVersion represents a single file repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "file_file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_version_href}": {
            "get": {
                "operationId": "repositories_file_file_versions_read",
                "description": "\nFileRepositoryVersion represents a single file repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_file_file_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_file_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_file_file_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repositories/reclaim_space/": {
            "post": {
                "operationId": "repositories_reclaim_space_reclaim",
                "description": "Trigger an asynchronous space reclaim operation.",
                "tags": [
                    "Repositories: Reclaim_Space"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/repository_versions/": {
            "get": {
                "operationId": "repository_versions_list",
                "description": "A mixin to hold the shared get_queryset logic used by RepositoryVersionViewSets.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repository_Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/roles/": {
            "get": {
                "operationId": "roles_list",
                "description": "ViewSet for Role.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contains_permission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter roles that have any of the permissions in the list.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description matches value"
                    },
                    {
                        "in": "query",
                        "name": "description__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description contains value"
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description contains value"
                    },
                    {
                        "in": "query",
                        "name": "description__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description matches value"
                    },
                    {
                        "in": "query",
                        "name": "for_object_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter roles that only have permissions for the specified object HREF."
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "locked",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where locked matches value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-locked",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "description",
                                    "locked",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `locked` - Locked\n* `-locked` - Locked (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "roles_create",
                "description": "ViewSet for Role.",
                "summary": "Create a role",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{role_href}": {
            "get": {
                "operationId": "roles_read",
                "description": "ViewSet for Role.",
                "summary": "Inspect a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "roles_update",
                "description": "ViewSet for Role.",
                "summary": "Update a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "roles_partial_update",
                "description": "ViewSet for Role.",
                "summary": "Update a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "roles_delete",
                "description": "ViewSet for Role.",
                "summary": "Delete a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/signing-services/": {
            "get": {
                "operationId": "signing_services_list",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "summary": "List signing services",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pubkey_fingerprint",
                                    "-public_key",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-script",
                                    "name",
                                    "pk",
                                    "pubkey_fingerprint",
                                    "public_key",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "script"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `public_key` - Public key\n* `-public_key` - Public key (descending)\n* `pubkey_fingerprint` - Pubkey fingerprint\n* `-pubkey_fingerprint` - Pubkey fingerprint (descending)\n* `script` - Script\n* `-script` - Script (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSigningServiceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{signing_service_href}": {
            "get": {
                "operationId": "signing_services_read",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "summary": "Inspect a signing service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "signing_service_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningServiceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/status/": {
            "get": {
                "operationId": "status_read",
                "description": "Returns status and app information about Pulp.\n\nInformation includes:\n * version of pulpcore and loaded pulp plugins\n * known workers\n * known content apps\n * database connection status\n * redis connection status\n * disk usage information",
                "summary": "Inspect status of Pulp",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/task-groups/": {
            "get": {
                "operationId": "task_groups_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List task groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_group_href}": {
            "get": {
                "operationId": "task_groups_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a task group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/task-schedules/": {
            "get": {
                "operationId": "task_schedules_list",
                "description": "ViewSet to monitor task schedules.",
                "summary": "List task schedules",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-dispatch_interval",
                                    "-name",
                                    "-next_dispatch",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-task_name",
                                    "dispatch_interval",
                                    "name",
                                    "next_dispatch",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "task_name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `next_dispatch` - Next dispatch\n* `-next_dispatch` - Next dispatch (descending)\n* `dispatch_interval` - Dispatch interval\n* `-dispatch_interval` - Dispatch interval (descending)\n* `task_name` - Task name\n* `-task_name` - Task name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "task_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where task_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "task_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where task_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskScheduleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}": {
            "get": {
                "operationId": "task_schedules_read",
                "description": "ViewSet to monitor task schedules.",
                "summary": "Inspect a task schedule",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskScheduleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}add_role/": {
            "post": {
                "operationId": "task_schedules_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}list_roles/": {
            "get": {
                "operationId": "task_schedules_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}my_permissions/": {
            "get": {
                "operationId": "task_schedules_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}remove_role/": {
            "post": {
                "operationId": "task_schedules_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/tasks/": {
            "get": {
                "operationId": "tasks_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "child_tasks",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where child_tasks matches value"
                    },
                    {
                        "in": "query",
                        "name": "created_resources",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "finished_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where finished_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "logging_cid",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid matches value"
                    },
                    {
                        "in": "query",
                        "name": "logging_cid__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid contains value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-enc_args",
                                    "-enc_kwargs",
                                    "-error",
                                    "-finished_at",
                                    "-logging_cid",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-reserved_resources_record",
                                    "-started_at",
                                    "-state",
                                    "-unblocked_at",
                                    "-versions",
                                    "enc_args",
                                    "enc_kwargs",
                                    "error",
                                    "finished_at",
                                    "logging_cid",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "reserved_resources_record",
                                    "started_at",
                                    "state",
                                    "unblocked_at",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `state` - State\n* `-state` - State (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `logging_cid` - Logging cid\n* `-logging_cid` - Logging cid (descending)\n* `unblocked_at` - Unblocked at\n* `-unblocked_at` - Unblocked at (descending)\n* `started_at` - Started at\n* `-started_at` - Started at (descending)\n* `finished_at` - Finished at\n* `-finished_at` - Finished at (descending)\n* `error` - Error\n* `-error` - Error (descending)\n* `enc_args` - Enc args\n* `-enc_args` - Enc args (descending)\n* `enc_kwargs` - Enc kwargs\n* `-enc_kwargs` - Enc kwargs (descending)\n* `reserved_resources_record` - Reserved resources record\n* `-reserved_resources_record` - Reserved resources record (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "parent_task",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where parent_task matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources_record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where started_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "canceling",
                                "completed",
                                "failed",
                                "running",
                                "skipped",
                                "waiting"
                            ]
                        },
                        "description": "Filter results where state matches value\n\n* `waiting` - Waiting\n* `skipped` - Skipped\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `canceled` - Canceled\n* `canceling` - Canceling"
                    },
                    {
                        "in": "query",
                        "name": "state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where state is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where state not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "task_group",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where task_group matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where worker matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where worker is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "worker__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where worker has a null value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}add_role/": {
            "post": {
                "operationId": "tasks_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}list_roles/": {
            "get": {
                "operationId": "tasks_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}my_permissions/": {
            "get": {
                "operationId": "tasks_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}remove_role/": {
            "post": {
                "operationId": "tasks_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/tasks/purge/": {
            "post": {
                "operationId": "tasks_purge",
                "description": "Trigger an asynchronous task that deletes completed tasks that finished prior to a specified timestamp.",
                "summary": "Purge Completed Tasks",
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/uploads/": {
            "get": {
                "operationId": "uploads_list",
                "description": "View for chunked uploads.",
                "summary": "List uploads",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-size",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "size"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `size` - Size\n* `-size` - Size (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size matches value"
                    },
                    {
                        "in": "query",
                        "name": "size__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "size__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size is less than value"
                    },
                    {
                        "in": "query",
                        "name": "size__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where size is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUploadResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "uploads_create",
                "description": "View for chunked uploads.",
                "summary": "Create an upload",
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}": {
            "get": {
                "operationId": "uploads_read",
                "description": "View for chunked uploads.",
                "summary": "Inspect an upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "uploads_update",
                "description": "Upload a chunk for an upload.",
                "summary": "Upload a file chunk",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Content-Range",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The Content-Range header specifies the location of the file chunk within the file.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "uploads_delete",
                "description": "View for chunked uploads.",
                "summary": "Delete an upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upload_href}add_role/": {
            "post": {
                "operationId": "uploads_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}commit/": {
            "post": {
                "operationId": "uploads_commit",
                "description": "Queues a Task that creates an Artifact, and the Upload gets deleted and cannot be re-used.",
                "summary": "Finish an Upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}list_roles/": {
            "get": {
                "operationId": "uploads_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}my_permissions/": {
            "get": {
                "operationId": "uploads_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}remove_role/": {
            "post": {
                "operationId": "uploads_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/upstream-pulps/": {
            "get": {
                "operationId": "upstream_pulps_list",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "List upstream pulps",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUpstreamPulpResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "upstream_pulps_create",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Create an upstream pulp",
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}": {
            "get": {
                "operationId": "upstream_pulps_read",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Inspect an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "upstream_pulps_update",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Update an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "upstream_pulps_partial_update",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Update an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "upstream_pulps_delete",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Delete an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upstream_pulp_href}add_role/": {
            "post": {
                "operationId": "upstream_pulps_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}list_roles/": {
            "get": {
                "operationId": "upstream_pulps_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}my_permissions/": {
            "get": {
                "operationId": "upstream_pulps_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}remove_role/": {
            "post": {
                "operationId": "upstream_pulps_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}replicate/": {
            "post": {
                "operationId": "upstream_pulps_replicate",
                "description": "Trigger an asynchronous repository replication task group. This API is provided as a tech preview.",
                "summary": "Replicate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/users/": {
            "get": {
                "operationId": "users_list",
                "description": "ViewSet for User.",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email matches value"
                    },
                    {
                        "in": "query",
                        "name": "email__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email contains value"
                    },
                    {
                        "in": "query",
                        "name": "email__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email contains value"
                    },
                    {
                        "in": "query",
                        "name": "email__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email matches value"
                    },
                    {
                        "in": "query",
                        "name": "email__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where email is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where first_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_active matches value"
                    },
                    {
                        "in": "query",
                        "name": "is_staff",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_staff matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where last_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-date_joined",
                                    "-email",
                                    "-first_name",
                                    "-id",
                                    "-is_active",
                                    "-is_staff",
                                    "-is_superuser",
                                    "-last_login",
                                    "-last_name",
                                    "-password",
                                    "-pk",
                                    "-username",
                                    "date_joined",
                                    "email",
                                    "first_name",
                                    "id",
                                    "is_active",
                                    "is_staff",
                                    "is_superuser",
                                    "last_login",
                                    "last_name",
                                    "password",
                                    "pk",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `id` - Id\n* `-id` - Id (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `last_login` - Last login\n* `-last_login` - Last login (descending)\n* `is_superuser` - Is superuser\n* `-is_superuser` - Is superuser (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `first_name` - First name\n* `-first_name` - First name (descending)\n* `last_name` - Last name\n* `-last_name` - Last name (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `is_staff` - Is staff\n* `-is_staff` - Is staff (descending)\n* `is_active` - Is active\n* `-is_active` - Is active (descending)\n* `date_joined` - Date joined\n* `-date_joined` - Date joined (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username matches value"
                    },
                    {
                        "in": "query",
                        "name": "username__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username contains value"
                    },
                    {
                        "in": "query",
                        "name": "username__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username contains value"
                    },
                    {
                        "in": "query",
                        "name": "username__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username matches value"
                    },
                    {
                        "in": "query",
                        "name": "username__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where username is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_create",
                "description": "ViewSet for User.",
                "summary": "Create an user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_user_href}roles/": {
            "get": {
                "operationId": "users_roles_list",
                "description": "ViewSet for UserRole.",
                "summary": "List user roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content_object",
                        "schema": {
                            "type": "string"
                        },
                        "description": "content_object"
                    },
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "galaxy_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-pk",
                                    "-pulp_created",
                                    "-role",
                                    "description",
                                    "pk",
                                    "pulp_created",
                                    "role"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `role` - Role\n* `-role` - Role (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_roles_create",
                "description": "ViewSet for UserRole.",
                "summary": "Create an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{galaxy_users_user_role_href}": {
            "get": {
                "operationId": "users_roles_read",
                "description": "ViewSet for UserRole.",
                "summary": "Inspect an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_users_user_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_roles_delete",
                "description": "ViewSet for UserRole.",
                "summary": "Delete an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "galaxy_users_user_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/pulp/api/v3/workers/": {
            "get": {
                "operationId": "workers_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List workers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "last_heartbeat",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is less than value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where last_heartbeat is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "missing",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "online",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_heartbeat",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-versions",
                                    "last_heartbeat",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_heartbeat` - Last heartbeat\n* `-last_heartbeat` - Last heartbeat (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkerResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{worker_href}": {
            "get": {
                "operationId": "workers_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a worker",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worker_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/": {
            "get": {
                "operationId": "api_galaxy_service_index_get",
                "description": "Link other resource registry endpoints",
                "tags": [
                    "Api: Service-Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/service-index/metadata/": {
            "get": {
                "operationId": "api_galaxy_service_index_metadata_get",
                "description": "A view to define the base properties for the views in\nansible_base.rbac. Set ANSIBLE_BASE_CUSTOM_VIEW_PARENT\nto this class in settings so that the rbac endpoints\nfollow the defined pagination and permission classes.",
                "tags": [
                    "Api: Service-Index Metadata"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/service-index/object-delete/": {
            "post": {
                "operationId": "api_galaxy_service_index_object_delete_create",
                "description": "Delete all role assignments (user and team) for a specific resource.\n\nExpected request data:\n{\n    \"resource_type\": \"main.inventory\",\n    \"resource_pk\": \"4\"\n}",
                "tags": [
                    "Api: Service-Index Object-Delete"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/service-index/resource-types/": {
            "get": {
                "operationId": "api_galaxy_service_index_resource_types_list",
                "description": "Index of the resource types that are configured in the system.",
                "summary": "List resource types",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Service-Index Resource-Types"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResourceTypeResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{dab_resource_registry_resource_type_href}": {
            "get": {
                "operationId": "resource_type_instance_read",
                "description": "Index of the resource types that are configured in the system.",
                "summary": "Inspect a resource type",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_resource_registry_resource_type_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Resource: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceTypeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{dab_resource_registry_resource_type_href}manifest/": {
            "get": {
                "operationId": "manifest_manifest",
                "description": "Returns the as a stream the csv of resource_id,hash for a given resource type.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_resource_registry_resource_type_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Manifest"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceTypeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/resources/": {
            "get": {
                "operationId": "api_galaxy_service_index_resources_list",
                "description": "Index of all the resources in the system.",
                "summary": "List resources",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Service-Index Resources"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResourceListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy_service_index_resources_create",
                "description": "Index of all the resources in the system.",
                "summary": "Create a resource",
                "tags": [
                    "Api: Service-Index Resources"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{dab_resource_registry_resource_href}": {
            "get": {
                "operationId": "resource_instance_read",
                "description": "Index of all the resources in the system.",
                "summary": "Inspect a resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_resource_registry_resource_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Resource: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "resource_instance_update",
                "description": "Index of all the resources in the system.",
                "summary": "Update a resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_resource_registry_resource_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Resource: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Resource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "resource_instance_partial_update",
                "description": "Index of all the resources in the system.",
                "summary": "Update a resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_resource_registry_resource_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Resource: Instance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "resource_instance_delete",
                "description": "Index of all the resources in the system.",
                "summary": "Delete a resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dab_resource_registry_resource_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Resource: Instance"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-permissions/": {
            "get": {
                "operationId": "api_galaxy_service_index_role_permissions_list",
                "description": "List of permissions managed with the RBAC system",
                "summary": "List permissions",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Service-Index Role-Permissions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDABPermissionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-team-assignments/": {
            "get": {
                "operationId": "api_galaxy_service_index_role_team_assignments_list",
                "description": "List of team role assignments for cross-service communication",
                "summary": "List role team assignments",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Service-Index Role-Team-Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServiceRoleTeamAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-team-assignments/assign/": {
            "post": {
                "operationId": "api_galaxy_service_index_role_team_assignments_assign_assign",
                "description": "List of team role assignments for cross-service communication",
                "tags": [
                    "Api: Service-Index Role-Team-Assignments Assign"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleTeamAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleTeamAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleTeamAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRoleTeamAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-team-assignments/unassign/": {
            "post": {
                "operationId": "api_galaxy_service_index_role_team_assignments_unassign_unassign",
                "description": "List of team role assignments for cross-service communication",
                "tags": [
                    "Api: Service-Index Role-Team-Assignments Unassign"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleTeamAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleTeamAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleTeamAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRoleTeamAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-types/": {
            "get": {
                "operationId": "api_galaxy_service_index_role_types_list",
                "description": "List of types registered with the RBAC system, or loaded in from external system",
                "summary": "List dab content types",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Service-Index Role-Types"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDABContentTypeResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-user-assignments/": {
            "get": {
                "operationId": "api_galaxy_service_index_role_user_assignments_list",
                "description": "List of user assignments for cross-service communication",
                "summary": "List role user assignments",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Service-Index Role-User-Assignments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServiceRoleUserAssignmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-user-assignments/assign/": {
            "post": {
                "operationId": "api_galaxy_service_index_role_user_assignments_assign_assign",
                "description": "List of user assignments for cross-service communication",
                "tags": [
                    "Api: Service-Index Role-User-Assignments Assign"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleUserAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleUserAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleUserAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRoleUserAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/service-index/role-user-assignments/unassign/": {
            "post": {
                "operationId": "api_galaxy_service_index_role_user_assignments_unassign_unassign",
                "description": "List of user assignments for cross-service communication",
                "tags": [
                    "Api: Service-Index Role-User-Assignments Unassign"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleUserAssignment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleUserAssignment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRoleUserAssignment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRoleUserAssignmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/": {
            "get": {
                "operationId": "api_galaxy_v3_read",
                "description": "Legacy v3 endpoint.",
                "tags": [
                    "Api: V3"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/artifacts/collections/": {
            "post": {
                "operationId": "api_galaxy_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/artifacts/collections/{path}/{filename}": {
            "get": {
                "operationId": "api_galaxy_v3_artifacts_collections_get",
                "description": "Download collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Artifacts Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/auth/token/": {
            "post": {
                "operationId": "api_galaxy_v3_auth_token_post",
                "description": "Create or refresh user token.",
                "tags": [
                    "Api: V3 Auth Token"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_auth_token_delete",
                "description": "Invalidate user token.",
                "tags": [
                    "Api: V3 Auth Token"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collection_versions/all/": {
            "get": {
                "operationId": "api_galaxy_v3_collection_versions_all_get",
                "tags": [
                    "Api: V3 Collection_Versions All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/": {
            "get": {
                "operationId": "api_galaxy_v3_collections_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "api_galaxy_v3_collections_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "api_galaxy_v3_collections_update",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_collections_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "api_galaxy_v3_collections_versions_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "api_galaxy_v3_collections_versions_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_collections_versions_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/{namespace}/{name}/versions/{version}/copy/{source_path}/{dest_path}/": {
            "post": {
                "operationId": "api_galaxy_v3_collections_versions_copy_copy_content",
                "description": "Copy collection version from one  repository to another.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dest_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "source_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Collections Versions Copy"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "api_galaxy_v3_collections_versions_docs_blob_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Collections Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/": {
            "post": {
                "operationId": "api_galaxy_v3_collections_versions_move_move_content",
                "description": "Remove content from source repo and add to destination repo.\n\nCreates new RepositoryVersion of source repo without content included.\nCreates new RepositoryVersion of destination repo with content included.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "dest_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "source_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Collections Versions Move"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/collections/all/": {
            "get": {
                "operationId": "api_galaxy_v3_collections_all_get",
                "tags": [
                    "Api: V3 Collections All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/excludes/": {
            "get": {
                "operationId": "api_galaxy_v3_excludes_read",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Excludes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/namespaces/": {
            "get": {
                "operationId": "api_galaxy_v3_namespaces_list",
                "summary": "List namespaces",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-company",
                                    "-id",
                                    "-name",
                                    "company",
                                    "id",
                                    "name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `id` - Id\n* `-id` - Id (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedgalaxy.NamespaceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy_v3_namespaces_create",
                "description": "Override to validate for name duplication before serializer validation.",
                "summary": "Create a namespace",
                "tags": [
                    "Api: V3 Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/galaxy.Namespace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/openapi.json": {
            "get": {
                "operationId": "api_galaxy_v3_openapi.json_get",
                "description": "Control authentication with GALAXY_API_SPEC_REQUIRE_AUTHENTICATION\napply to galaxy_ng openapi endpoints and monkey-patch pulp openapi endpoints.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en-us",
                                "es",
                                "fr",
                                "ja",
                                "ko",
                                "nl",
                                "zh-hans"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Openapi.Json"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/openapi.yaml": {
            "get": {
                "operationId": "api_galaxy_v3_openapi.yaml_get",
                "description": "Control authentication with GALAXY_API_SPEC_REQUIRE_AUTHENTICATION\napply to galaxy_ng openapi endpoints and monkey-patch pulp openapi endpoints.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en-us",
                                "es",
                                "fr",
                                "ja",
                                "ko",
                                "nl",
                                "zh-hans"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Openapi.Yaml"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/client-configuration/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_client_configuration_read",
                "description": "Return configurations for the ansible-galaxy client.",
                "tags": [
                    "Api: V3 Plugin Ansible Client-Configuration"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_read",
                "description": "ViewSet for Repository Metadata.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/all-collections/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_all_collections_list",
                "description": "Unpaginated ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections All-Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/all-versions/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_all_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections All-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/": {
            "post": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_artifacts_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUploadWithDownloadUrl"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/{filename}": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_artifacts_download",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/index/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_versions_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_collections_index_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Collections Index Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/namespaces/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_namespaces_list",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_namespaces_create",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/content/{distro_base_path}/namespaces/{name}/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_namespaces_read",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_namespaces_partial_update",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_plugin_ansible_content_namespaces_delete",
                "description": "Try to remove the Namespace if no Collections under Namespace are present.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/ansible/search/collection-versions/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_ansible_search_collection_versions_list",
                "description": "A viewset for cross-repo searches.",
                "summary": "List cross repository collection version indexs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these distrubtion ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "distribution_base_path",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these base paths.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - by CV created\n* `-pulp_created` - by CV created (descending)\n* `namespace` - by CV namespace\n* `-namespace` - by CV namespace (descending)\n* `name` - by CV name\n* `-name` - by CV name (descending)\n* `version` - by CV version\n* `-version` - by CV version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repository ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "repository_name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repositories.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Ansible Search Collection-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionSearchListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_galaxy_v3_plugin_ansible_search_collection_versions_rebuild",
                "description": "A viewset for cross-repo searches.",
                "tags": [
                    "Api: V3 Plugin Ansible Search Collection-Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/execution-environments/repositories/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories_list",
                "summary": "List container distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "my_permissions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-description",
                                    "-name",
                                    "-updated_at",
                                    "created_at",
                                    "description",
                                    "name",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/execution-environments/repositories/{base_path}/_content/history/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories__content_history_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-number",
                                    "created_at",
                                    "number"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `number` - Number\n* `-number` - Number (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories _Content History"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerRepositoryHistoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/execution-environments/repositories/{base_path}/_content/images/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories__content_images_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "digest__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "digest__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "digest__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclude_child_manifests",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "created_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories _Content Images"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerManifestResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/execution-environments/repositories/{base_path}/_content/images/{manifest_ref}/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories__content_images_read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "manifest_ref",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories _Content Images"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainerManifestDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories__content_images_delete",
                "description": "Trigger an asynchronous task to remove a manifest and all its associated data by a digest",
                "summary": "Delete an image from a repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "manifest_ref",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories _Content Images"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/execution-environments/repositories/{base_path}/_content/sync/": {
            "post": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories__content_sync_sync",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories _Content Sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/galaxy/v3/plugin/execution-environments/repositories/{base_path}/_content/tags/": {
            "get": {
                "operationId": "api_galaxy_v3_plugin_execution_environments_repositories__content_tags_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "base_path",
                        "schema": {
                            "type": "string",
                            "pattern": "^[-\\w.]+\\/{0,1}[-\\w.]+$"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-name",
                                    "-updated_at",
                                    "created_at",
                                    "name",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `name` - Name\n* `-name` - Name (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tagged_manifest__digest__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: V3 Plugin Execution-Environments Repositories _Content Tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContainerTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/galaxy/v3/tasks/": {
            "get": {
                "operationId": "tasks_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "child_tasks",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where child_tasks matches value"
                    },
                    {
                        "in": "query",
                        "name": "created_resources",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "finished_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where finished_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "logging_cid",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid matches value"
                    },
                    {
                        "in": "query",
                        "name": "logging_cid__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid contains value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-enc_args",
                                    "-enc_kwargs",
                                    "-error",
                                    "-finished_at",
                                    "-logging_cid",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-reserved_resources_record",
                                    "-started_at",
                                    "-state",
                                    "-unblocked_at",
                                    "-versions",
                                    "enc_args",
                                    "enc_kwargs",
                                    "error",
                                    "finished_at",
                                    "logging_cid",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "reserved_resources_record",
                                    "started_at",
                                    "state",
                                    "unblocked_at",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `state` - State\n* `-state` - State (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `logging_cid` - Logging cid\n* `-logging_cid` - Logging cid (descending)\n* `unblocked_at` - Unblocked at\n* `-unblocked_at` - Unblocked at (descending)\n* `started_at` - Started at\n* `-started_at` - Started at (descending)\n* `finished_at` - Finished at\n* `-finished_at` - Finished at (descending)\n* `error` - Error\n* `-error` - Error (descending)\n* `enc_args` - Enc args\n* `-enc_args` - Enc args (descending)\n* `enc_kwargs` - Enc kwargs\n* `-enc_kwargs` - Enc kwargs (descending)\n* `reserved_resources_record` - Reserved resources record\n* `-reserved_resources_record` - Reserved resources record (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "parent_task",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where parent_task matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources_record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where started_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "canceling",
                                "completed",
                                "failed",
                                "running",
                                "skipped",
                                "waiting"
                            ]
                        },
                        "description": "Filter results where state matches value\n\n* `waiting` - Waiting\n* `skipped` - Skipped\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `canceled` - Canceled\n* `canceling` - Canceling"
                    },
                    {
                        "in": "query",
                        "name": "state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where state is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where state not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "task_group",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where task_group matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where worker matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where worker is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "worker__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where worker has a null value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskSummaryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/{api_path}": {
            "get": {
                "operationId": "pulp_api_get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "api_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp: Api"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/ansible/copy/": {
            "post": {
                "operationId": "copy_content",
                "description": "Trigger an asynchronous task to copy ansible content from one repository into another, creating a new repository version.",
                "summary": "Copy content",
                "tags": [
                    "Pulp: V3 Ansible Copy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_get",
                "description": "Return a response to the \"GET\" action.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{ansible_role_href}api/v1/roles/": {
            "get": {
                "operationId": "api_v1_roles_get",
                "description": "APIView for Roles.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Roles"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}versions/": {
            "get": {
                "operationId": "api_v1_roles_versions_list",
                "description": "APIView for Role Versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Versions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyRoleVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/{path}/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_get",
                "description": "Download collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Artifacts Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collection_versions/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collection_versions_all_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collection_Versions All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_update",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_docs_blob_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_all_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_namespaces_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_namespaces_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/client-configuration/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_client_configuration_read",
                "description": "Return configurations for the ansible-galaxy client.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Client-Configuration"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_read",
                "description": "ViewSet for Repository Metadata.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_all_collections_list",
                "description": "Unpaginated ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections All-Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_all_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections All-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_artifacts_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_artifacts_download",
                "description": "Collection download endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_list",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_create",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_read",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_partial_update",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_delete",
                "description": "Try to remove the Namespace if no Collections under Namespace are present.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_cross_repository_collection_version_index_href}api/v3/plugin/ansible/search/collection-versions/": {
            "get": {
                "operationId": "api_v3_plugin_ansible_search_collection_versions_list",
                "description": "A viewset for cross-repo searches.",
                "summary": "List cross repository collection version indexs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_cross_repository_collection_version_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these distrubtion ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "distribution_base_path",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these base paths.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - by CV created\n* `-pulp_created` - by CV created (descending)\n* `namespace` - by CV namespace\n* `-namespace` - by CV namespace (descending)\n* `name` - by CV name\n* `-name` - by CV name (descending)\n* `version` - by CV version\n* `-version` - by CV version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repository ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "repository_name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repositories.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Plugin Ansible Search Collection-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionSearchListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_v3_plugin_ansible_search_collection_versions_rebuild",
                "description": "A viewset for cross-repo searches.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_cross_repository_collection_version_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Plugin Ansible Search Collection-Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_get",
                "description": "Return a response to the \"GET\" action.",
                "tags": [
                    "Pulp_Ansible: Default Api"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_read",
                "description": "Legacy v3 endpoint.",
                "tags": [
                    "Pulp_Ansible: Default Api V3"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/artifacts/collections/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/artifacts/collections/{path}/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_artifacts_collections_get",
                "description": "Download collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Artifacts Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collection_versions/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collection_versions_all_list",
                "description": "Legacy v3 endpoint.",
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collection_Versions All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_update",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_docs_blob_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_all_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections All"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_namespaces_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_namespaces_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/client-configuration/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_client_configuration_read",
                "description": "Return configurations for the ansible-galaxy client.",
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Client-Configuration"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_read",
                "description": "ViewSet for Repository Metadata.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_all_collections_list",
                "description": "Unpaginated ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections All-Collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_all_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections All-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_artifacts_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_artifacts_download",
                "description": "Collection download endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Artifacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-is_highest",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "is_highest",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `is_highest` - Is highest\n* `-is_highest` - Is highest (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions Docs-Blob"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_list",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_create",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_read",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_partial_update",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_delete",
                "description": "Try to remove the Namespace if no Collections under Namespace are present.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/search/collection-versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_search_collection_versions_list",
                "description": "A viewset for cross-repo searches.",
                "summary": "List cross repository collection version indexs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these distrubtion ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "distribution_base_path",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these base paths.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - by CV created\n* `-pulp_created` - by CV created (descending)\n* `namespace` - by CV namespace\n* `-namespace` - by CV namespace (descending)\n* `name` - by CV name\n* `-name` - by CV name (descending)\n* `version` - by CV version\n* `-version` - by CV version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repository ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "repository_name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repositories.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Search Collection-Versions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionSearchListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_search_collection_versions_rebuild",
                "description": "A viewset for cross-repo searches.",
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Search Collection-Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/token/": {
            "get": {
                "operationId": "token_get",
                "description": "Handles GET requests for the /token/ endpoint.",
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessPolicy": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                },
                "required": [
                    "statements"
                ]
            },
            "AccessPolicyResponse": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "viewset_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of ViewSet this AccessPolicy authorizes."
                    },
                    "customized": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if the AccessPolicy has been user-modified. False otherwise."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                },
                "required": [
                    "statements"
                ]
            },
            "AnsibleDistributionResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "base_path": {
                        "type": "string"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "base_path",
                    "created_at",
                    "name",
                    "updated_at"
                ]
            },
            "AnsibleRepositoryMark": {
                "type": "object",
                "description": "A serializer for the mark action.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "List of collection version hrefs to mark, use * to mark all content in repository"
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The string value of this mark.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "content_units",
                    "value"
                ]
            },
            "AnsibleRepositoryRebuild": {
                "type": "object",
                "description": "Serializer for Ansible Repository Rebuild.",
                "properties": {
                    "namespace": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    }
                }
            },
            "AnsibleRepositoryResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "next_version": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnsibleDistributionResponse"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_sync_task": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "name",
                    "updated_at"
                ]
            },
            "AnsibleRepositorySignature": {
                "type": "object",
                "description": "A serializer for the signing action.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "List of collection version hrefs to sign, use * to sign all content in repository"
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "description": "A signing service to use to sign the collections"
                    }
                },
                "required": [
                    "content_units",
                    "signing_service"
                ]
            },
            "AnsibleRepositorySyncURL": {
                "type": "object",
                "description": "Serializer for Ansible Repository Sync URL.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    },
                    "optimize": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to optimize sync or not."
                    }
                }
            },
            "ApiAppStatusResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    }
                }
            },
            "Artifact": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "ArtifactDistributionResponse": {
                "type": "object",
                "description": "A serializer for ArtifactDistribution.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ArtifactRefResponse": {
                "type": "object",
                "description": "A serializer for an Artifact reference.",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "sha256": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "filename",
                    "sha256",
                    "size"
                ]
            },
            "ArtifactResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "file": {
                        "type": "string",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "ClientConfigurationResponse": {
                "type": "object",
                "description": "Configuration settings for the ansible-galaxy client.",
                "properties": {
                    "default_distribution_path": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "default_distribution_path"
                ]
            },
            "CollectionImportDetailResponse": {
                "type": "object",
                "description": "A serializer for a CollectionImport detail view.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error": {
                        "type": "object"
                    },
                    "messages": {
                        "type": "object"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "messages",
                    "started_at",
                    "state",
                    "updated_at"
                ]
            },
            "CollectionMetadataResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion metadata.",
                "properties": {
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 64
                        },
                        "readOnly": true
                    },
                    "contents": {
                        "type": "object",
                        "readOnly": true
                    },
                    "dependencies": {
                        "type": "object",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "documentation": {
                        "type": "string",
                        "readOnly": true
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "issues": {
                        "type": "string",
                        "readOnly": true
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 32
                        },
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tags"
                ]
            },
            "CollectionNamespaceResponse": {
                "type": "object",
                "description": "A serializer for a Collection Version namespace field.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "metadata_sha256": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "metadata_sha256",
                    "name"
                ]
            },
            "CollectionOneShot": {
                "type": "object",
                "description": "A serializer for the Collection One Shot Upload API.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The Collection tarball."
                    },
                    "sha256": {
                        "type": "string",
                        "minLength": 1,
                        "description": "An optional sha256 checksum of the uploaded file."
                    },
                    "expected_namespace": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected 'namespace' of the Collection to be verified against the metadata during import."
                    },
                    "expected_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected 'name' of the Collection to be verified against the metadata during import."
                    },
                    "expected_version": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected version of the Collection to be verified against the metadata during import."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "CollectionRefResponse": {
                "type": "object",
                "description": "A serializer for a Collection reference.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string",
                        "description": "Returns link to a collection.",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CollectionResponse": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "versions_url": {
                        "type": "string",
                        "description": "Get a link to a collection versions list.",
                        "readOnly": true
                    },
                    "highest_version": {
                        "type": "object",
                        "description": "Get a highest version and its link.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Get the timestamp of the lowest version CollectionVersion's created timestamp.",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Get the timestamp of the latest version CollectionVersion's created timestamp.",
                        "readOnly": true
                    },
                    "download_count": {
                        "type": "integer",
                        "description": "Get the download count of the collection",
                        "readOnly": true
                    }
                },
                "required": [
                    "deprecated"
                ]
            },
            "CollectionSummary": {
                "type": "object",
                "description": "Collection Version serializer without docs blob.",
                "properties": {}
            },
            "CollectionSummaryResponse": {
                "type": "object",
                "description": "Collection Version serializer without docs blob.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The namespace of the collection.",
                        "maxLength": 64
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the collection.",
                        "maxLength": 64
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of the collection.",
                        "maxLength": 128
                    },
                    "requires_ansible": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The version of Ansible required to use the collection. Multiple versions can be separated with a comma.",
                        "maxLength": 255
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "contents": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "description": "A JSON field with data about the contents."
                    },
                    "dependencies": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A dict declaring Collections that this collection requires to be installed for it to be usable."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A short summary description of the collection."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.TagResponse"
                        },
                        "readOnly": true
                    }
                }
            },
            "CollectionUploadWithDownloadUrl": {
                "type": "object",
                "description": "A serializer for the Collection One Shot Upload API.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "sha256": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "file"
                ]
            },
            "CollectionVersionCopyMove": {
                "type": "object",
                "description": "Copy or move collections from a source repository into one or more destinations.\n\nThis will carry associated content like Signatures and Marks along.",
                "properties": {
                    "collection_versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "A list of collection versions to move or copy."
                    },
                    "destination_repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "List of repository HREFs to put content in."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "description": "HREF for a signing service. This will be used to sign the collection before moving putting it in any new repositories."
                    }
                },
                "required": [
                    "collection_versions",
                    "destination_repositories"
                ]
            },
            "CollectionVersionDocsResponse": {
                "type": "object",
                "description": "A serializer to display the docs_blob of a CollectionVersion.",
                "properties": {
                    "docs_blob": {
                        "type": "object"
                    }
                },
                "required": [
                    "docs_blob"
                ]
            },
            "CollectionVersionListResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion list item.",
                "properties": {
                    "version": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requires_ansible": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "marks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Get a list of mark values filtering only those in the current repo.",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "updated_at",
                    "version"
                ]
            },
            "CollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion.",
                "properties": {
                    "version": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requires_ansible": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "marks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Get a list of mark values filtering only those in the current repo.",
                        "readOnly": true
                    },
                    "artifact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ArtifactRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "download_url": {
                        "type": "string",
                        "description": "Get artifact download URL.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionNamespaceResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionSignatureResponse"
                        }
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionMetadataResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "git_url": {
                        "type": "string",
                        "description": "Get the git URL.",
                        "readOnly": true
                    },
                    "git_commit_sha": {
                        "type": "string",
                        "description": "Get the git commit sha.",
                        "readOnly": true
                    },
                    "manifest": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding MANIFEST.json data."
                    },
                    "files": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding FILES.json data."
                    }
                },
                "required": [
                    "created_at",
                    "signatures",
                    "updated_at",
                    "version"
                ]
            },
            "CollectionVersionSearchList": {
                "type": "object",
                "description": "Cross-repo search results.",
                "properties": {
                    "repository": {
                        "$ref": "#/components/schemas/Repository"
                    },
                    "collection_version": {
                        "$ref": "#/components/schemas/CollectionSummary"
                    },
                    "namespace_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        ],
                        "nullable": true
                    },
                    "is_highest": {
                        "type": "boolean"
                    },
                    "is_deprecated": {
                        "type": "boolean"
                    },
                    "is_signed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "collection_version",
                    "is_deprecated",
                    "is_highest",
                    "is_signed",
                    "namespace_metadata",
                    "repository"
                ]
            },
            "CollectionVersionSearchListResponse": {
                "type": "object",
                "description": "Cross-repo search results.",
                "properties": {
                    "repository": {
                        "$ref": "#/components/schemas/RepositoryResponse"
                    },
                    "collection_version": {
                        "$ref": "#/components/schemas/CollectionSummaryResponse"
                    },
                    "repository_version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                            }
                        ],
                        "nullable": true
                    },
                    "is_highest": {
                        "type": "boolean"
                    },
                    "is_deprecated": {
                        "type": "boolean"
                    },
                    "is_signed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "collection_version",
                    "is_deprecated",
                    "is_highest",
                    "is_signed",
                    "namespace_metadata",
                    "repository"
                ]
            },
            "CollectionVersionSignatureResponse": {
                "type": "object",
                "description": "A serializer for the signatures on a Collection Version.",
                "properties": {
                    "signature": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "signing_service": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "pubkey_fingerprint"
                ]
            },
            "CompositeContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompositeContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContainerManifestDetailResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "digest": {
                        "type": "string"
                    },
                    "schema_version": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/MediaTypeEnum"
                    },
                    "config_blob": {
                        "type": "object",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "layers": {
                        "type": "object",
                        "readOnly": true
                    },
                    "image_manifests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ManifestListManifestResponse"
                        }
                    }
                },
                "required": [
                    "digest",
                    "id",
                    "image_manifests",
                    "media_type",
                    "schema_version"
                ]
            },
            "ContainerManifestResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "digest": {
                        "type": "string"
                    },
                    "schema_version": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/MediaTypeEnum"
                    },
                    "config_blob": {
                        "type": "object",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "layers": {
                        "type": "object",
                        "readOnly": true
                    },
                    "image_manifests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ManifestListManifestResponse"
                        }
                    }
                },
                "required": [
                    "digest",
                    "id",
                    "image_manifests",
                    "media_type",
                    "schema_version"
                ]
            },
            "ContainerNamespaceResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "my_permissions": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MyPermissionsFieldResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "owners": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at"
                ]
            },
            "ContainerReadme": {
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "text": {
                        "type": "string"
                    }
                }
            },
            "ContainerReadmeResponse": {
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string"
                    }
                }
            },
            "ContainerRepositoryHistoryResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "added": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "removed": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "number"
                ]
            },
            "ContainerRepositoryResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pulp": {
                        "type": "object",
                        "readOnly": true
                    },
                    "namespace": {
                        "$ref": "#/components/schemas/ContainerNamespaceResponse"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "namespace"
                ]
            },
            "ContainerRepositorySyncURL": {
                "type": "object",
                "description": "Serializer for Container Sync.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    },
                    "signed_only": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, only signed content will be synced. Signatures are not verified."
                    }
                }
            },
            "ContainerTagResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tagged_manifest": {
                        "$ref": "#/components/schemas/ManifestListResponse"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "tagged_manifest"
                ]
            },
            "ContentAppStatusResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    }
                }
            },
            "ContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentRedirectContentGuardResponse": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentSettingsResponse": {
                "type": "object",
                "description": "Serializer for information about content-app-settings for the pulp instance",
                "properties": {
                    "content_origin": {
                        "type": "string",
                        "description": "The CONTENT_ORIGIN setting for this Pulp instance"
                    },
                    "content_path_prefix": {
                        "type": "string",
                        "description": "The CONTENT_PATH_PREFIX setting for this Pulp instance"
                    }
                },
                "required": [
                    "content_origin",
                    "content_path_prefix"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "removed": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "present": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "Copy": {
                "type": "object",
                "description": "A serializer for Content Copy API.",
                "properties": {
                    "config": {
                        "type": "object",
                        "description": "A JSON document describing sources, destinations, and content to be copied"
                    }
                },
                "required": [
                    "config"
                ]
            },
            "CurrentUser": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "CurrentUserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "readOnly": true,
                        "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "auth_provider": {
                        "type": "string",
                        "readOnly": true
                    },
                    "model_permissions": {
                        "type": "object",
                        "readOnly": true
                    },
                    "is_anonymous": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "DABContentTypeResponse": {
                "type": "object",
                "properties": {
                    "api_slug": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "maxLength": 201
                    },
                    "service": {
                        "type": "string",
                        "description": "service namespace to track what service this type is for. Can have a value of shared, which indicates it is synchronized.",
                        "maxLength": 100
                    },
                    "app_label": {
                        "type": "string",
                        "description": "Django app that the model is in. This is an internal technical detail that does not affect API use.",
                        "maxLength": 100
                    },
                    "model": {
                        "type": "string",
                        "description": "Name of the type according to the Django ORM Meta model_name convention. Comes from the python class, but lowercase with no spaces.",
                        "maxLength": 100
                    },
                    "parent_content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "pk_field_type": {
                        "type": "string",
                        "description": "Database field type of the primary key field of the model, relevant for interal logic tracking permissions.",
                        "maxLength": 100
                    }
                },
                "required": [
                    "app_label",
                    "model"
                ]
            },
            "DABPermissionResponse": {
                "type": "object",
                "properties": {
                    "api_slug": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "maxLength": 201
                    },
                    "codename": {
                        "type": "string",
                        "description": "A codename for the permission, in the format {action}_{model_name}. Where action is typically the view set action (view/list/etc) from Django rest framework.",
                        "maxLength": 100
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this permission.",
                        "maxLength": 255
                    }
                },
                "required": [
                    "codename",
                    "name"
                ]
            },
            "DatabaseConnectionResponse": {
                "type": "object",
                "description": "Serializer for the database connection information",
                "properties": {
                    "connected": {
                        "type": "boolean",
                        "description": "Info about whether the app can connect to the database"
                    }
                },
                "required": [
                    "connected"
                ]
            },
            "DistributionResponse": {
                "type": "object",
                "properties": {
                    "pulp_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "base_path": {
                        "type": "string"
                    },
                    "repository": {
                        "$ref": "#/components/schemas/RepositoryResponse"
                    }
                },
                "required": [
                    "base_path",
                    "name",
                    "repository"
                ]
            },
            "Domain": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                },
                "required": [
                    "name",
                    "storage_class",
                    "storage_settings"
                ]
            },
            "DomainResponse": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                },
                "required": [
                    "name",
                    "storage_class",
                    "storage_settings"
                ]
            },
            "EvaluationResponse": {
                "type": "object",
                "description": "Results from evaluating a proposed parameter to a PulpImport call.",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Parameter value being evaluated."
                    },
                    "is_valid": {
                        "type": "boolean",
                        "description": "True if evaluation passed, false otherwise."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Messages describing results of all evaluations done. May be an empty list."
                    }
                },
                "required": [
                    "context",
                    "is_valid",
                    "messages"
                ]
            },
            "FeatureFlagResponse": {
                "type": "object",
                "description": "Serialize list of feature flags"
            },
            "FilesystemExport": {
                "type": "object",
                "description": "Serializer for FilesystemExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of the publication to be exported."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of the repository version export."
                    },
                    "start_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "The URI of the last-exported-repo-version."
                    }
                }
            },
            "FilesystemExportResponse": {
                "type": "object",
                "description": "Serializer for FilesystemExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    }
                }
            },
            "FilesystemExporter": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "FilesystemExporterResponse": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "GalaxyRoleResponse": {
                "type": "object",
                "description": "A serializer for Galaxy's representation of Roles.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Get id.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "GalaxyRoleVersionResponse": {
                "type": "object",
                "description": "A serializer for Galaxy's representation of Role versions.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "description": "Get source.",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Group": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name",
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the group progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of group progress report'."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the group progress report."
                    }
                }
            },
            "GroupResponse": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupRole": {
                "type": "object",
                "description": "Serializer for GroupRole.",
                "properties": {
                    "role": {
                        "type": "string",
                        "minLength": 1
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on the model-level."
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "GroupRoleResponse": {
                "type": "object",
                "description": "Serializer for GroupRole.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "role": {
                        "type": "string"
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on the model-level."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "GroupUser": {
                "type": "object",
                "description": "Serializer for Users that belong to a Group.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    }
                },
                "required": [
                    "username"
                ]
            },
            "GroupUserResponse": {
                "type": "object",
                "description": "Serializer for Users that belong to a Group.",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "HeaderContentGuard": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                },
                "required": [
                    "header_name",
                    "header_value",
                    "name"
                ]
            },
            "HeaderContentGuardResponse": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                },
                "required": [
                    "header_name",
                    "header_value",
                    "name"
                ]
            },
            "ImportResponse": {
                "type": "object",
                "description": "Serializer for Imports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the Task that ran the Import."
                    },
                    "params": {
                        "type": "object",
                        "description": "Any parameters that were used to create the import."
                    }
                },
                "required": [
                    "params",
                    "task"
                ]
            },
            "ImportTaskDetailResponse": {
                "type": "object",
                "description": "A serializer for a CollectionImport list view.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error": {
                        "type": "object"
                    },
                    "messages": {
                        "type": "object"
                    }
                },
                "required": [
                    "created_at",
                    "error",
                    "finished_at",
                    "id",
                    "messages",
                    "name",
                    "namespace",
                    "started_at",
                    "state",
                    "updated_at",
                    "version"
                ]
            },
            "ImportTaskListResponse": {
                "type": "object",
                "description": "A serializer for a CollectionImport list view.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "created_at",
                    "finished_at",
                    "id",
                    "name",
                    "namespace",
                    "started_at",
                    "state",
                    "updated_at",
                    "version"
                ]
            },
            "LegacyRoleTagResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "ManifestCopy": {
                "type": "object",
                "description": "Serializer for copying manifests from a source repository to a destination repository.",
                "properties": {
                    "source_repository": {
                        "type": "string",
                        "format": "uri",
                        "title": "Repository",
                        "description": "A URI of the repository to copy content from."
                    },
                    "source_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository version to copy content from."
                    },
                    "digests": {
                        "type": "array",
                        "items": {},
                        "description": "A list of manifest digests to copy."
                    },
                    "media_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaTypesEnum"
                        },
                        "description": "A list of media_types to copy."
                    }
                }
            },
            "ManifestListManifestResponse": {
                "type": "object",
                "properties": {
                    "os": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "os_version": {
                        "type": "string"
                    },
                    "os_features": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    },
                    "variant": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "architecture",
                    "os"
                ]
            },
            "ManifestListResponse": {
                "type": "object",
                "properties": {
                    "pulp_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "digest": {
                        "type": "string"
                    },
                    "schema_version": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "media_type": {
                        "$ref": "#/components/schemas/MediaTypeEnum"
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "digest",
                    "media_type",
                    "schema_version"
                ]
            },
            "MediaTypeEnum": {
                "enum": [
                    "application/vnd.docker.distribution.manifest.v1+json",
                    "application/vnd.docker.distribution.manifest.v2+json",
                    "application/vnd.docker.distribution.manifest.list.v2+json",
                    "application/vnd.oci.image.manifest.v1+json",
                    "application/vnd.oci.image.index.v1+json"
                ],
                "type": "string",
                "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json"
            },
            "MediaTypesEnum": {
                "enum": [
                    "application/vnd.docker.distribution.manifest.v1+json",
                    "application/vnd.docker.distribution.manifest.v2+json",
                    "application/vnd.docker.distribution.manifest.list.v2+json",
                    "application/vnd.oci.image.manifest.v1+json",
                    "application/vnd.oci.image.index.v1+json"
                ],
                "type": "string",
                "description": "* `application/vnd.docker.distribution.manifest.v1+json` - application/vnd.docker.distribution.manifest.v1+json\n* `application/vnd.docker.distribution.manifest.v2+json` - application/vnd.docker.distribution.manifest.v2+json\n* `application/vnd.docker.distribution.manifest.list.v2+json` - application/vnd.docker.distribution.manifest.list.v2+json\n* `application/vnd.oci.image.manifest.v1+json` - application/vnd.oci.image.manifest.v1+json\n* `application/vnd.oci.image.index.v1+json` - application/vnd.oci.image.index.v1+json"
            },
            "MethodEnum": {
                "enum": [
                    "write",
                    "hardlink",
                    "symlink"
                ],
                "type": "string",
                "description": "* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
            },
            "MinimalTaskResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of task."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'."
                    },
                    "unblocked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task was identified ready for pickup."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task started execution."
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task stopped execution."
                    },
                    "worker": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The worker associated with this task. This field is empty if a worker is not yet assigned."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MultipleArtifactContentResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    }
                },
                "required": [
                    "artifacts"
                ]
            },
            "MyPermissionsField": {
                "type": "object"
            },
            "MyPermissionsFieldResponse": {
                "type": "object"
            },
            "MyPermissionsResponse": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "NamespaceLink": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "NamespaceLinkResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 32
                    },
                    "url": {
                        "type": "string",
                        "maxLength": 256
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "NamespaceRelatedField": {
                "type": "object",
                "description": "Serializer only returns fields specified in 'include_related' query param.\n\nThis allows for fields that require more database queries to be optionally\nincluded in API responses, which lowers the load on the backend. This is\nintended as a way to include extra data in list views.\n\nUsage:\n\nThis functions the same as DRF's base `serializers.Serializer` class with the\nexception that it will only return fields specified in the `?include_related=`\nquery parameter.\n\nExample:\n\nMySerializer(RelatedFieldsBaseSerializer):\n    foo = CharField()\n    bar = CharField()\n\nMySerializer will return:\n\n{\"foo\": None} when called with `?include_related=foo` and {\"foo\": None, \"bar\" None}\nwhen called with `?include_related=foo&include_related=bar`.",
                "properties": {}
            },
            "NamespaceRelatedFieldResponse": {
                "type": "object",
                "description": "Serializer only returns fields specified in 'include_related' query param.\n\nThis allows for fields that require more database queries to be optionally\nincluded in API responses, which lowers the load on the backend. This is\nintended as a way to include extra data in list views.\n\nUsage:\n\nThis functions the same as DRF's base `serializers.Serializer` class with the\nexception that it will only return fields specified in the `?include_related=`\nquery parameter.\n\nExample:\n\nMySerializer(RelatedFieldsBaseSerializer):\n    foo = CharField()\n    bar = CharField()\n\nMySerializer will return:\n\n{\"foo\": None} when called with `?include_related=foo` and {\"foo\": None, \"bar\" None}\nwhen called with `?include_related=foo&include_related=bar`.",
                "properties": {
                    "my_permissions": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MyPermissionsFieldResponse"
                            }
                        ],
                        "readOnly": true
                    }
                }
            },
            "NestedRole": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "role"
                ]
            },
            "NestedRoleResponse": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "OCIBuildImage": {
                "type": "object",
                "description": "Serializer for building an OCI container image from a Containerfile.\n\nThe Containerfile can either be specified via an artifact url, or a new file can be uploaded.\nA repository must be specified, to which the container image content will be added.",
                "properties": {
                    "containerfile_artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact representing the Containerfile that should be used to run podman-build."
                    },
                    "containerfile": {
                        "type": "string",
                        "format": "binary",
                        "description": "An uploaded Containerfile that should be used to run podman-build."
                    },
                    "tag": {
                        "type": "string",
                        "minLength": 1,
                        "default": "latest",
                        "description": "A tag name for the new image being built."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A JSON string where each key is an artifact href and the value is it's relative path (name) inside the /pulp_working_directory of the build container executing the Containerfile."
                    }
                }
            },
            "ObjectRolesResponse": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedRoleResponse"
                        }
                    }
                },
                "required": [
                    "roles"
                ]
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this resource.",
                        "maxLength": 512
                    }
                },
                "required": [
                    "name"
                ]
            },
            "OrganizationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.",
                        "maxLength": 512
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "OrphansCleanup": {
                "type": "object",
                "properties": {
                    "content_hrefs": {
                        "type": "array",
                        "items": {},
                        "description": "Will delete specified content and associated Artifacts if they are orphans."
                    },
                    "orphan_protection_time": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "The time in minutes for how long Pulp will hold orphan Content and Artifacts before they become candidates for deletion by this orphan cleanup task. This should ideally be longer than your longest running task otherwise any content created during that task could be cleaned up before the task finishes. If not specified, a default value is taken from the setting ORPHAN_PROTECTION_TIME."
                    }
                }
            },
            "PaginatedAccessPolicyResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccessPolicyResponse"
                        }
                    }
                }
            },
            "PaginatedArtifactDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactDistributionResponse"
                        }
                    }
                }
            },
            "PaginatedArtifactResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactResponse"
                        }
                    }
                }
            },
            "PaginatedCollectionResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionResponse"
                        }
                    }
                }
            },
            "PaginatedCollectionVersionListResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionListResponse"
                        }
                    }
                }
            },
            "PaginatedCollectionVersionSearchListResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                        }
                    }
                }
            },
            "PaginatedCompositeContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompositeContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedContainerManifestResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerManifestResponse"
                        }
                    }
                }
            },
            "PaginatedContainerRepositoryHistoryResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerRepositoryHistoryResponse"
                        }
                    }
                }
            },
            "PaginatedContainerRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerRepositoryResponse"
                        }
                    }
                }
            },
            "PaginatedContainerTagResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerTagResponse"
                        }
                    }
                }
            },
            "PaginatedContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedContentRedirectContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedDABContentTypeResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DABContentTypeResponse"
                        }
                    }
                }
            },
            "PaginatedDABPermissionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DABPermissionResponse"
                        }
                    }
                }
            },
            "PaginatedDistributionResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionResponse"
                        }
                    }
                }
            },
            "PaginatedDomainResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainResponse"
                        }
                    }
                }
            },
            "PaginatedFilesystemExportResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilesystemExportResponse"
                        }
                    }
                }
            },
            "PaginatedFilesystemExporterResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilesystemExporterResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyRoleResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyRoleVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyRoleVersionResponse"
                        }
                    }
                }
            },
            "PaginatedGroupResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupResponse"
                        }
                    }
                }
            },
            "PaginatedGroupRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupRoleResponse"
                        }
                    }
                }
            },
            "PaginatedGroupUserResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupUserResponse"
                        }
                    }
                }
            },
            "PaginatedHeaderContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HeaderContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedImportResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportResponse"
                        }
                    }
                }
            },
            "PaginatedImportTaskListResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportTaskListResponse"
                        }
                    }
                }
            },
            "PaginatedLegacyRoleTagResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegacyRoleTagResponse"
                        }
                    }
                }
            },
            "PaginatedMultipleArtifactContentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipleArtifactContentResponse"
                        }
                    }
                }
            },
            "PaginatedOrganizationResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationResponse"
                        }
                    }
                }
            },
            "PaginatedPublicationResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicationResponse"
                        }
                    }
                }
            },
            "PaginatedPulpExportResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpExportResponse"
                        }
                    }
                }
            },
            "PaginatedPulpExporterResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpExporterResponse"
                        }
                    }
                }
            },
            "PaginatedPulpImporterResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpImporterResponse"
                        }
                    }
                }
            },
            "PaginatedRBACContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RBACContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "PaginatedResourceListResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceListResponse"
                        }
                    }
                }
            },
            "PaginatedResourceTypeResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceTypeResponse"
                        }
                    }
                }
            },
            "PaginatedRoleDefinitionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleDefinitionResponse"
                        }
                    }
                }
            },
            "PaginatedRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResponse"
                        }
                    }
                }
            },
            "PaginatedRoleTeamAssignmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleTeamAssignmentResponse"
                        }
                    }
                }
            },
            "PaginatedRoleUserAssignmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleUserAssignmentResponse"
                        }
                    }
                }
            },
            "PaginatedSearchResultsResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchResultsResponse"
                        }
                    }
                }
            },
            "PaginatedServiceRoleTeamAssignmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceRoleTeamAssignmentResponse"
                        }
                    }
                }
            },
            "PaginatedServiceRoleUserAssignmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceRoleUserAssignmentResponse"
                        }
                    }
                }
            },
            "PaginatedSigningServiceResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SigningServiceResponse"
                        }
                    }
                }
            },
            "PaginatedSyncListResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncListResponse"
                        }
                    }
                }
            },
            "PaginatedTagResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagResponse"
                        }
                    }
                }
            },
            "PaginatedTaskGroupResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskGroupResponse"
                        }
                    }
                }
            },
            "PaginatedTaskResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskResponse"
                        }
                    }
                }
            },
            "PaginatedTaskScheduleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskScheduleResponse"
                        }
                    }
                }
            },
            "PaginatedTaskSummaryResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskSummaryResponse"
                        }
                    }
                }
            },
            "PaginatedTeamAccessAssignmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeamAccessAssignmentResponse"
                        }
                    }
                }
            },
            "PaginatedTeamAccessViewSet_Team_ResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeamAccessViewSet_Team_Response"
                        }
                    }
                }
            },
            "PaginatedTeamResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeamResponse"
                        }
                    }
                }
            },
            "PaginatedUploadResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadResponse"
                        }
                    }
                }
            },
            "PaginatedUpstreamPulpResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpstreamPulpResponse"
                        }
                    }
                }
            },
            "PaginatedUserAccessAssignmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAccessAssignmentResponse"
                        }
                    }
                }
            },
            "PaginatedUserAccessViewSet_User_ResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAccessViewSet_User_Response"
                        }
                    }
                }
            },
            "PaginatedUserDetailResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDetailResponse"
                        }
                    }
                }
            },
            "PaginatedUserResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    }
                }
            },
            "PaginatedUserRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRoleResponse"
                        }
                    }
                }
            },
            "PaginatedWorkerResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkerResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleCollectionDeprecatedResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecatedResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleNamespaceMetadataResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionRemoteResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionMarkResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionMarkResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionSignatureResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionSignatureResponse"
                        }
                    }
                }
            },
            "Paginatedansible.GitRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.GitRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.RoleRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.RoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.RoleResponse"
                        }
                    }
                }
            },
            "Paginatedcertguard.RHSMCertGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certguard.RHSMCertGuardResponse"
                        }
                    }
                }
            },
            "Paginatedcertguard.X509CertGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certguard.X509CertGuardResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.BlobResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.BlobResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerNamespaceResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerNamespaceResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerPullThroughDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerPullThroughDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerPullThroughRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerPullThroughRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerPushRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerRemoteResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ContainerRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ManifestResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ManifestResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.ManifestSignatureResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.ManifestSignatureResponse"
                        }
                    }
                }
            },
            "Paginatedcontainer.TagResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/container.TagResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileAlternateContentSourceResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileAlternateContentSourceResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileContentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileContentResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FilePublicationResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FilePublicationResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedfile.FileRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/file.FileRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedgalaxy.ContainerRegistryRemoteResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/galaxy.ContainerRegistryRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedgalaxy.LoginResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/galaxy.LoginResponse"
                        }
                    }
                }
            },
            "Paginatedgalaxy.NamespaceResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/galaxy.NamespaceResponse"
                        }
                    }
                }
            },
            "PatchedAccessPolicy": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                }
            },
            "PatchedCollection": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "deprecated": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedCompositeContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                }
            },
            "PatchedContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "PatchedDomain": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                }
            },
            "PatchedFilesystemExporter": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                }
            },
            "PatchedGroup": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150
                    }
                }
            },
            "PatchedHeaderContentGuard": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                }
            },
            "PatchedOrganization": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this resource.",
                        "maxLength": 512
                    }
                }
            },
            "PatchedPulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                }
            },
            "PatchedPulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PatchedRBACContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "PatchedResource": {
                "type": "object",
                "properties": {
                    "ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A unique ID identifying this resource by the resource server."
                    },
                    "service_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the service responsible for managing this resource."
                    },
                    "is_partially_migrated": {
                        "type": "boolean",
                        "description": "A flag indicating that the resource has been copied into the resource server, but the service_id hasn't been updated yet."
                    },
                    "resource_type": {
                        "type": "string",
                        "minLength": 1
                    },
                    "resource_data": {
                        "type": "object"
                    }
                }
            },
            "PatchedRole": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    }
                }
            },
            "PatchedRoleDefinition": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "String to use for references to this type from other models in the API."
                        }
                    },
                    "content_type": {
                        "type": "string",
                        "minLength": 1,
                        "description": "String to use for references to this type from other models in the API.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of this role."
                    }
                }
            },
            "PatchedSyncList": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "policy": {
                        "$ref": "#/components/schemas/Policy8baEnum"
                    },
                    "upstream_repository": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "distribution": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncListCollectionSummary"
                        }
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "groups": {
                        "type": "string"
                    }
                }
            },
            "PatchedTaskCancel": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "state": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The desired state of the task. Only 'canceled' is accepted."
                    }
                }
            },
            "PatchedTeam": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this resource.",
                        "maxLength": 512
                    }
                }
            },
            "PatchedUpstreamPulp": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_label_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "One or more comma separated labels that will be used to filter distributions on the upstream Pulp. E.g. \"foo=bar,key=val\" or \"foo,key\""
                    }
                }
            },
            "PatchedUser": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    }
                }
            },
            "PatchedUserCreateUpdateDelete": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "maxLength": 128
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    }
                }
            },
            "Patchedansible.AnsibleDistribution": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "Patchedansible.AnsibleNamespaceMetadata": {
                "type": "object",
                "description": "A serializer for Namespaces.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "description": "Required named, only accepts lowercase, numbers and underscores.",
                        "maxLength": 64,
                        "pattern": "^(?!.*__)[a-z]+[0-9a-z_]*$"
                    },
                    "company": {
                        "type": "string",
                        "description": "Optional namespace company owner.",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional namespace contact email.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional short description.",
                        "maxLength": 256
                    },
                    "resources": {
                        "type": "string",
                        "description": "Optional resource page in markdown format."
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLink"
                        },
                        "description": "Labeled related links."
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "Optional avatar image for Namespace"
                    }
                }
            },
            "Patchedansible.AnsibleRepository": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "last_synced_metadata_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last synced metadata time."
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Gpg public key to verify collection signatures against"
                    },
                    "private": {
                        "type": "boolean"
                    }
                }
            },
            "Patchedansible.CollectionRemote": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "maxLength": 2000
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Remote user."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Remote password."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "User for proxy authentication."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Password for proxy authentication."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "signed_only": {
                        "type": "boolean",
                        "description": "Sync only collections that have a signature"
                    }
                }
            },
            "Patchedansible.GitRemote": {
                "type": "object",
                "description": "A serializer for Git Collection Remotes.",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "metadata_only": {
                        "type": "boolean",
                        "description": "If True, only metadata about the content will be stored in Pulp. Clients will retrieve content from the remote URL."
                    },
                    "git_ref": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A git ref. e.g.: branch, tag, or commit sha."
                    }
                }
            },
            "Patchedansible.RoleRemote": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                }
            },
            "Patchedcertguard.RHSMCertGuard": {
                "type": "object",
                "description": "RHSM Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                }
            },
            "Patchedcertguard.X509CertGuard": {
                "type": "object",
                "description": "X.509 Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                }
            },
            "Patchedcontainer.ContainerDistribution": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContainerPullThroughDistribution": {
                "type": "object",
                "description": "A serializer for a specialized pull-through distribution referencing sub-distributions.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Distributions created after pulling content through cache"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContainerPullThroughRemote": {
                "type": "object",
                "description": "A serializer for a remote used in the pull-through distribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy8e2Enum"
                            }
                        ],
                        "default": "on_demand"
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                }
            },
            "Patchedcontainer.ContainerPushRepository": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "Patchedcontainer.ContainerRemote": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        \n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "upstream_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the upstream repository"
                    },
                    "include_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to include during sync.\n            Wildcards *, ? are recognized.\n            'include_tags' is evaluated before 'exclude_tags'.\n            "
                    },
                    "exclude_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to exclude during sync.\n            Wildcards *, ? are recognized.\n            'exclude_tags' is evaluated after 'include_tags'.\n            "
                    },
                    "sigstore": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A URL to a sigstore to download image signatures from",
                        "format": "uri"
                    }
                }
            },
            "Patchedcontainer.ContainerRepository": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    }
                }
            },
            "Patchedfile.FileAlternateContentSource": {
                "type": "object",
                "description": "Serializer for File alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                }
            },
            "Patchedfile.FileDistribution": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                }
            },
            "Patchedfile.FileRemote": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                }
            },
            "Patchedfile.FileRepository": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "Patchedgalaxy.Namespace": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLink"
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "string"
                    }
                }
            },
            "Policy762Enum": {
                "enum": [
                    "immediate",
                    "on_demand",
                    "streamed"
                ],
                "type": "string",
                "description": "* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
            },
            "Policy8baEnum": {
                "enum": [
                    "exclude",
                    "include"
                ],
                "type": "string",
                "description": "* `exclude` - exclude\n* `include` - include"
            },
            "Policy8e2Enum": {
                "enum": [
                    "on_demand"
                ],
                "type": "string",
                "description": "* `on_demand` - on_demand"
            },
            "PolicyDb6Enum": {
                "enum": [
                    "immediate",
                    "When syncing, download all metadata and content now."
                ],
                "type": "string",
                "description": "* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
            },
            "ProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of progress report'."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the progress report. The possible values are: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'. The default is 'waiting'."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the progress report."
                    }
                }
            },
            "PublicationResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    }
                }
            },
            "PulpExport": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "full": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": true,
                        "description": "Do a Full (true) or Incremental (false) export."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": false,
                        "description": "Generate report on what would be exported and disk-space required."
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit repo-version hrefs to export (replaces current_version)."
                    },
                    "chunk_size": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Chunk export-tarfile into pieces of chunk_size bytes. Recognizes units of B/KB/MB/GB/TB. A chunk has a maximum size of 1TB."
                    },
                    "start_versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit last-exported-repo-version hrefs (replaces last_export)."
                    }
                }
            },
            "PulpExportResponse": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    },
                    "output_file_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Dictionary of filename: sha256hash entries for export-output-file(s)"
                    },
                    "toc_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Filename and sha256-checksum of table-of-contents for this export"
                    }
                }
            },
            "PulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpExporterResponse": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpImport": {
                "type": "object",
                "description": "Serializer for call to import into Pulp.",
                "properties": {
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to export that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    },
                    "create_repositories": {
                        "type": "boolean",
                        "default": false,
                        "description": "If True, missing repositories will be automatically created during the import."
                    }
                }
            },
            "PulpImportCheck": {
                "type": "object",
                "description": "Check validity of provided import-options.\n\nProvides the ability to check that an import is 'sane' without having to actually\ncreate an importer.",
                "properties": {
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to export-tar-gz that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    },
                    "repo_mapping": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PulpImportCheckResponse": {
                "type": "object",
                "description": "Return the response to a PulpImport import-check call.",
                "properties": {
                    "toc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'toc' file for PulpImport"
                    },
                    "path": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'path' file for PulpImport"
                    },
                    "repo_mapping": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'repo_mapping' file for PulpImport"
                    }
                }
            },
            "PulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PulpImporterResponse": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Purge": {
                "type": "object",
                "properties": {
                    "finished_before": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2025-09-06",
                        "description": "Purge tasks completed earlier than this timestamp. Format '%Y-%m-%d[T%H:%M:%S]'"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StatesEnum"
                        },
                        "default": [
                            "completed"
                        ],
                        "description": "List of task-states to be purged. Only 'final' states are allowed."
                    }
                }
            },
            "RBACContentGuard": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RBACContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupUserResponse"
                        },
                        "readOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ReclaimSpace": {
                "type": "object",
                "description": "Serializer for reclaim disk space operation.",
                "properties": {
                    "repo_hrefs": {
                        "type": "array",
                        "items": {},
                        "description": "Will reclaim space for the specified list of repos. Use ['*'] to specify all repos."
                    },
                    "repo_versions_keeplist": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Will exclude repo versions from space reclaim."
                    }
                },
                "required": [
                    "repo_hrefs"
                ]
            },
            "RecursiveManage": {
                "type": "object",
                "description": "Serializer for adding and removing content to/from a Container repository.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to operate on."
                    }
                }
            },
            "RedisConnectionResponse": {
                "type": "object",
                "description": "Serializer for information about the Redis connection",
                "properties": {
                    "connected": {
                        "type": "boolean",
                        "description": "Info about whether the app can connect to Redis"
                    }
                },
                "required": [
                    "connected"
                ]
            },
            "RemoteResponse": {
                "type": "object",
                "description": "Every remote defined by a plugin should have a Remote serializer that inherits from this\nclass. Please import from `pulpcore.plugin.serializers` rather than from this module directly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "RemoveImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with the image removal.",
                "properties": {
                    "digest": {
                        "type": "string",
                        "minLength": 1,
                        "description": "sha256 of the Manifest file"
                    }
                },
                "required": [
                    "digest"
                ]
            },
            "RemoveSignatures": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with the signatures removal.",
                "properties": {
                    "signed_with_key_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "key_id of the key the signatures were produced with"
                    }
                },
                "required": [
                    "signed_with_key_id"
                ]
            },
            "RemoveSignaturesResponse": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with the signatures removal.",
                "properties": {
                    "signed_with_key_id": {
                        "type": "string",
                        "description": "key_id of the key the signatures were produced with"
                    }
                },
                "required": [
                    "signed_with_key_id"
                ]
            },
            "Repair": {
                "type": "object",
                "properties": {
                    "verify_checksums": {
                        "type": "boolean",
                        "default": true,
                        "description": "Will verify that the checksum of all stored files matches what saved in the database. Otherwise only the existence of the files will be checked. Enabled by default"
                    }
                }
            },
            "RepoMetadataResponse": {
                "type": "object",
                "description": "A serializer to display RepositoryVersion metadata.",
                "properties": {
                    "published": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "published"
                ]
            },
            "Repository": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositoryResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "pulp_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "content_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "gpgkey": {
                        "type": "string"
                    }
                },
                "required": [
                    "gpgkey",
                    "name"
                ]
            },
            "RepositorySign": {
                "type": "object",
                "description": "Serializer for container images signing.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A signing service to sign with. This will override a signing service set on the repo."
                    },
                    "future_base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Future base path content will be distributed at for sync repos"
                    },
                    "tags_list": {
                        "type": "array",
                        "items": {},
                        "description": "A list of tags to sign."
                    }
                }
            },
            "RepositorySyncURL": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    }
                }
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "Resource": {
                "type": "object",
                "properties": {
                    "ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A unique ID identifying this resource by the resource server."
                    },
                    "service_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the service responsible for managing this resource."
                    },
                    "is_partially_migrated": {
                        "type": "boolean",
                        "description": "A flag indicating that the resource has been copied into the resource server, but the service_id hasn't been updated yet."
                    },
                    "resource_type": {
                        "type": "string",
                        "minLength": 1
                    },
                    "resource_data": {
                        "type": "object"
                    }
                },
                "required": [
                    "resource_data"
                ]
            },
            "ResourceListResponse": {
                "type": "object",
                "properties": {
                    "object_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The object id for this resource."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The name of this resource."
                    },
                    "ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A unique ID identifying this resource by the resource server."
                    },
                    "service_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the service responsible for managing this resource."
                    },
                    "is_partially_migrated": {
                        "type": "boolean",
                        "description": "A flag indicating that the resource has been copied into the resource server, but the service_id hasn't been updated yet."
                    },
                    "resource_type": {
                        "type": "string"
                    },
                    "has_serializer": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ResourceResponse": {
                "type": "object",
                "properties": {
                    "object_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The object id for this resource."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The name of this resource."
                    },
                    "ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A unique ID identifying this resource by the resource server."
                    },
                    "service_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the service responsible for managing this resource."
                    },
                    "is_partially_migrated": {
                        "type": "boolean",
                        "description": "A flag indicating that the resource has been copied into the resource server, but the service_id hasn't been updated yet."
                    },
                    "resource_type": {
                        "type": "string"
                    },
                    "has_serializer": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "resource_data": {
                        "type": "object"
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "additional_data": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "resource_data"
                ]
            },
            "ResourceTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this resource type."
                    },
                    "externally_managed": {
                        "type": "boolean",
                        "description": "Is this resource type managed externally from this service."
                    },
                    "shared_resource_type": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "externally_managed"
                ]
            },
            "Role": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleDefinition": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "String to use for references to this type from other models in the API."
                        }
                    },
                    "content_type": {
                        "type": "string",
                        "minLength": 1,
                        "description": "String to use for references to this type from other models in the API.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of this role."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleDefinitionDetail": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "String to use for references to this type from other models in the API."
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of this role."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleDefinitionDetailResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "summary_fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "String to use for references to this type from other models in the API."
                        }
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of this role."
                    },
                    "managed": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Is this role managed by the system (not changeable by the users)."
                    },
                    "modified_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who last modified this resource."
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who created this resource."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleDefinitionResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "summary_fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "String to use for references to this type from other models in the API."
                        }
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "nullable": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of this role."
                    },
                    "managed": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Is this role managed by the system (not changeable by the users)."
                    },
                    "modified_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who last modified this resource."
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who created this resource."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleMetadataResponse": {
                "type": "object",
                "properties": {
                    "allowed_permissions": {
                        "type": "object",
                        "description": "A List of permissions allowed for a role definition, given its content type."
                    }
                },
                "required": [
                    "allowed_permissions"
                ]
            },
            "RoleResponse": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    },
                    "locked": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if the role is system managed."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleTeamAssignment": {
                "type": "object",
                "properties": {
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The primary key of the object this assignment applies to; null value indicates system-wide assignment."
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource id of the object this role applies to. An alternative to the object_id field."
                    },
                    "role_definition": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The role definition which defines permissions conveyed by this assignment."
                    },
                    "team": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "team_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource ID of the team who will receive permissions from this assignment. An alternative to team field."
                    }
                },
                "required": [
                    "role_definition"
                ]
            },
            "RoleTeamAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "summary_fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who created this resource."
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The primary key of the object this assignment applies to; null value indicates system-wide assignment."
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource id of the object this role applies to. An alternative to the object_id field."
                    },
                    "role_definition": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The role definition which defines permissions conveyed by this assignment."
                    },
                    "team": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "team_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource ID of the team who will receive permissions from this assignment. An alternative to team field."
                    }
                },
                "required": [
                    "role_definition"
                ]
            },
            "RoleUserAssignment": {
                "type": "object",
                "properties": {
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The primary key of the object this assignment applies to; null value indicates system-wide assignment."
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource id of the object this role applies to. An alternative to the object_id field."
                    },
                    "role_definition": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The role definition which defines permissions conveyed by this assignment."
                    },
                    "user": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource ID of the user who will receive permissions from this assignment. An alternative to user field."
                    }
                },
                "required": [
                    "role_definition"
                ]
            },
            "RoleUserAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "summary_fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who created this resource."
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The primary key of the object this assignment applies to; null value indicates system-wide assignment."
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource id of the object this role applies to. An alternative to the object_id field."
                    },
                    "role_definition": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The role definition which defines permissions conveyed by this assignment."
                    },
                    "user": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource ID of the user who will receive permissions from this assignment. An alternative to user field."
                    }
                },
                "required": [
                    "role_definition"
                ]
            },
            "SearchResultsResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "latest_version": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    },
                    "contents": {
                        "type": "object"
                    },
                    "download_count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object"
                    },
                    "platforms": {
                        "type": "object"
                    },
                    "relevance": {
                        "type": "number",
                        "format": "double"
                    },
                    "search": {
                        "type": "string"
                    }
                },
                "required": [
                    "avatar_url",
                    "contents",
                    "deprecated",
                    "description",
                    "download_count",
                    "last_updated",
                    "latest_version",
                    "name",
                    "namespace",
                    "platforms",
                    "relevance",
                    "search",
                    "tags",
                    "type"
                ]
            },
            "ServiceRoleTeamAssignment": {
                "type": "object",
                "properties": {
                    "created_by_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "role_definition": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "team_ansible_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "role_definition",
                    "team_ansible_id"
                ]
            },
            "ServiceRoleTeamAssignmentResponse": {
                "type": "object",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created_by_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "role_definition": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "team_ansible_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "role_definition",
                    "team_ansible_id"
                ]
            },
            "ServiceRoleUserAssignment": {
                "type": "object",
                "properties": {
                    "created_by_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "role_definition": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "user_ansible_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "role_definition",
                    "user_ansible_id"
                ]
            },
            "ServiceRoleUserAssignmentResponse": {
                "type": "object",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created_by_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "role_definition": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "user_ansible_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "role_definition",
                    "user_ansible_id"
                ]
            },
            "SetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SigningServiceResponse": {
                "type": "object",
                "description": "A serializer for the model declaring a signing service.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name used to recognize a script."
                    },
                    "public_key": {
                        "type": "string",
                        "description": "The value of a public key used for the repository verification."
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the public key."
                    },
                    "script": {
                        "type": "string",
                        "description": "An absolute path to a script which is going to be used for the signing."
                    }
                },
                "required": [
                    "name",
                    "pubkey_fingerprint",
                    "public_key",
                    "script"
                ]
            },
            "StatesEnum": {
                "enum": [
                    "skipped",
                    "completed",
                    "failed",
                    "canceled"
                ],
                "type": "string",
                "description": "* `skipped` - skipped\n* `completed` - completed\n* `failed` - failed\n* `canceled` - canceled"
            },
            "StatusResponse": {
                "type": "object",
                "description": "Serializer for the status information of the app",
                "properties": {
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionResponse"
                        },
                        "description": "Version information of Pulp components"
                    },
                    "online_workers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkerResponse"
                        },
                        "description": "List of online workers known to the application. An online worker is actively heartbeating and can respond to new work."
                    },
                    "online_api_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiAppStatusResponse"
                        },
                        "description": "List of online api apps known to the application. An online api app is actively heartbeating and can serve the rest api to clients."
                    },
                    "online_content_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentAppStatusResponse"
                        },
                        "description": "List of online content apps known to the application. An online content app is actively heartbeating and can serve data to clients."
                    },
                    "database_connection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DatabaseConnectionResponse"
                            }
                        ],
                        "description": "Database connection information"
                    },
                    "redis_connection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RedisConnectionResponse"
                            }
                        ],
                        "description": "Redis connection information"
                    },
                    "storage": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageResponse"
                            }
                        ],
                        "description": "Storage information"
                    },
                    "content_settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSettingsResponse"
                            }
                        ],
                        "description": "Content-app settings"
                    },
                    "domain_enabled": {
                        "type": "boolean",
                        "description": "Is Domains enabled"
                    }
                },
                "required": [
                    "content_settings",
                    "database_connection",
                    "domain_enabled",
                    "online_api_apps",
                    "online_content_apps",
                    "online_workers",
                    "versions"
                ]
            },
            "StorageClassEnum": {
                "enum": [
                    "pulpcore.app.models.storage.FileSystem",
                    "storages.backends.s3boto3.S3Boto3Storage",
                    "storages.backends.azure_storage.AzureStorage"
                ],
                "type": "string",
                "description": "* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
            },
            "StorageResponse": {
                "type": "object",
                "description": "Serializer for information about the storage system",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of bytes",
                        "minimum": 0
                    },
                    "used": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of bytes in use",
                        "minimum": 0
                    },
                    "free": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of free bytes",
                        "minimum": 0
                    }
                },
                "required": [
                    "free",
                    "total",
                    "used"
                ]
            },
            "SyncList": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "policy": {
                        "$ref": "#/components/schemas/Policy8baEnum"
                    },
                    "upstream_repository": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "distribution": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncListCollectionSummary"
                        }
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "groups": {
                        "type": "string"
                    }
                },
                "required": [
                    "collections",
                    "groups",
                    "name",
                    "namespaces"
                ]
            },
            "SyncListCollectionSummary": {
                "type": "object",
                "properties": {
                    "namespace": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "SyncListCollectionSummaryResponse": {
                "type": "object",
                "properties": {
                    "namespace": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 64
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "SyncListResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "policy": {
                        "$ref": "#/components/schemas/Policy8baEnum"
                    },
                    "upstream_repository": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "nullable": true
                    },
                    "distribution": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncListCollectionSummaryResponse"
                        }
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "string"
                    }
                },
                "required": [
                    "collections",
                    "groups",
                    "name",
                    "namespaces"
                ]
            },
            "TagCopy": {
                "type": "object",
                "description": "Serializer for copying tags from a source repository to a destination repository.",
                "properties": {
                    "source_repository": {
                        "type": "string",
                        "format": "uri",
                        "title": "Repository",
                        "description": "A URI of the repository to copy content from."
                    },
                    "source_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository version to copy content from."
                    },
                    "names": {
                        "type": "array",
                        "items": {},
                        "description": "A list of tag names to copy."
                    }
                }
            },
            "TagImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with a manifest tagging.",
                "properties": {
                    "tag": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A tag name",
                        "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$"
                    },
                    "digest": {
                        "type": "string",
                        "minLength": 1,
                        "description": "sha256 of the Manifest file"
                    }
                },
                "required": [
                    "digest",
                    "tag"
                ]
            },
            "TagResponse": {
                "type": "object",
                "description": "A serializer for the Tag model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "TaskGroupOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations that return a task group.",
                "properties": {
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task group."
                    }
                },
                "required": [
                    "task_group"
                ]
            },
            "TaskGroupResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the task group."
                    },
                    "all_tasks_dispatched": {
                        "type": "boolean",
                        "description": "Whether all tasks have been spawned for this task group."
                    },
                    "waiting": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'waiting' state"
                    },
                    "skipped": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'skipped' state"
                    },
                    "running": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'running' state"
                    },
                    "completed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'completed' state"
                    },
                    "canceled": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceled' state"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'failed' state"
                    },
                    "canceling": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceling' state"
                    },
                    "group_progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupProgressReportResponse"
                        },
                        "readOnly": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MinimalTaskResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "all_tasks_dispatched",
                    "description"
                ]
            },
            "TaskResponse": {
                "type": "object",
                "properties": {
                    "pulp_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "type": "string"
                    },
                    "error": {
                        "type": "object",
                        "nullable": true
                    },
                    "worker": {
                        "type": "object",
                        "nullable": true,
                        "readOnly": true
                    },
                    "parent_task": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "child_tasks": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressReportResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "child_tasks",
                    "created_at",
                    "finished_at",
                    "name",
                    "pulp_id",
                    "started_at",
                    "state",
                    "updated_at"
                ]
            },
            "TaskScheduleResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the task schedule."
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the task to be scheduled."
                    },
                    "dispatch_interval": {
                        "type": "string",
                        "nullable": true,
                        "description": "Periodicity of the schedule."
                    },
                    "next_dispatch": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Timestamp of the next time the task will be dispatched."
                    },
                    "last_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The last task dispatched by this schedule."
                    }
                },
                "required": [
                    "dispatch_interval",
                    "name",
                    "task_name"
                ]
            },
            "TaskSummaryResponse": {
                "type": "object",
                "description": "TaskSerializer but without detail fields.\n\nFor use in /tasks/<str:pk>/ detail views.",
                "properties": {
                    "pulp_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "href": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "finished_at",
                    "name",
                    "pulp_id",
                    "started_at",
                    "state"
                ]
            },
            "Team": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this resource.",
                        "maxLength": 512
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TeamAccessAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "summary_fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who created this resource."
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The primary key of the object this assignment applies to; null value indicates system-wide assignment."
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource id of the object this role applies to. An alternative to the object_id field."
                    },
                    "role_definition": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The role definition which defines permissions conveyed by this assignment."
                    },
                    "team": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "team_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource ID of the team who will receive permissions from this assignment. An alternative to team field."
                    }
                },
                "required": [
                    "role_definition"
                ]
            },
            "TeamAccessViewSet_Team_Response": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.",
                        "maxLength": 512
                    },
                    "organization": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The organization of this team."
                    },
                    "object_role_assignments": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "organization"
                ]
            },
            "TeamResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.",
                        "maxLength": 512
                    },
                    "group": {
                        "type": "string",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UnTagImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with a manifest untagging.",
                "properties": {
                    "tag": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A tag name",
                        "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$"
                    }
                },
                "required": [
                    "tag"
                ]
            },
            "UnpaginatedCollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for unpaginated CollectionVersion.",
                "properties": {
                    "version": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requires_ansible": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "marks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Get a list of mark values filtering only those in the current repo.",
                        "readOnly": true
                    },
                    "artifact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ArtifactRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "download_url": {
                        "type": "string",
                        "description": "Get artifact download URL.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionNamespaceResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionSignatureResponse"
                        }
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionMetadataResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "git_url": {
                        "type": "string",
                        "description": "Get the git URL.",
                        "readOnly": true
                    },
                    "git_commit_sha": {
                        "type": "string",
                        "description": "Get the git commit sha.",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "signatures",
                    "updated_at",
                    "version"
                ]
            },
            "UnsetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "UnsetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "key"
                ]
            },
            "Upload": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadChunk": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "A chunk of the uploaded file."
                    },
                    "sha256": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-256 checksum of the chunk if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "UploadChunkResponse": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "UploadCommit": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected sha256 checksum for the file."
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "UploadDetailResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    },
                    "chunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadChunkResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UpstreamPulp": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_label_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "One or more comma separated labels that will be used to filter distributions on the upstream Pulp. E.g. \"foo=bar,key=val\" or \"foo,key\""
                    }
                },
                "required": [
                    "api_root",
                    "base_url",
                    "name"
                ]
            },
            "UpstreamPulpResponse": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "pulp_label_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "One or more comma separated labels that will be used to filter distributions on the upstream Pulp. E.g. \"foo=bar,key=val\" or \"foo,key\""
                    }
                },
                "required": [
                    "api_root",
                    "base_url",
                    "name"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserAccessAssignmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "summary_fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The date/time this resource was created."
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The user who created this resource."
                    },
                    "content_type": {
                        "type": "string",
                        "description": "String to use for references to this type from other models in the API.",
                        "readOnly": true
                    },
                    "object_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The primary key of the object this assignment applies to; null value indicates system-wide assignment."
                    },
                    "object_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource id of the object this role applies to. An alternative to the object_id field."
                    },
                    "role_definition": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The role definition which defines permissions conveyed by this assignment."
                    },
                    "user": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_ansible_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The resource ID of the user who will receive permissions from this assignment. An alternative to user field."
                    },
                    "intermediary_roles": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "role_definition"
                ]
            },
            "UserAccessViewSet_User_Response": {
                "type": "object",
                "description": "controller uses auth.User model so this needs to be as compatible as possible, thus ModelSerializer",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "object_role_assignments": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserCreateUpdateDelete": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "maxLength": 128
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserCreateUpdateDeleteResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": []
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserDetailResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teams": {
                        "type": "string",
                        "readOnly": true
                    },
                    "organizations": {
                        "type": "string",
                        "readOnly": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserGroup": {
                "type": "object",
                "description": "Serializer for Groups that belong to an User.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name.",
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UserGroupResponse": {
                "type": "object",
                "description": "Serializer for Groups that belong to an User.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name.",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups."
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "auth_provider": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserRole": {
                "type": "object",
                "description": "Serializer for UserRole.",
                "properties": {
                    "role": {
                        "type": "string",
                        "minLength": 1
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on either domain or model-level."
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "UserRoleResponse": {
                "type": "object",
                "description": "Serializer for UserRole.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "role": {
                        "type": "string"
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on either domain or model-level."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "VersionResponse": {
                "type": "object",
                "description": "Serializer for the version information of Pulp components",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Name of a versioned component of Pulp"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the component (e.g. 3.0.0)"
                    },
                    "package": {
                        "type": "string",
                        "description": "Python package name providing the component"
                    },
                    "module": {
                        "type": "string",
                        "description": "Python module name of the component"
                    },
                    "domain_compatible": {
                        "type": "boolean",
                        "description": "Domain feature compatibility of component"
                    }
                },
                "required": [
                    "component",
                    "domain_compatible",
                    "module",
                    "package",
                    "version"
                ]
            },
            "WorkerResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    },
                    "current_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The task this worker is currently executing, or empty if the worker is not currently assigned to a task."
                    }
                }
            },
            "ansible.AnsibleCollectionDeprecated": {
                "type": "object",
                "description": "A serializer for Ansible Collection Deprecations.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.AnsibleCollectionDeprecatedResponse": {
                "type": "object",
                "description": "A serializer for Ansible Collection Deprecations.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.AnsibleDistribution": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ansible.AnsibleDistributionResponse": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "client_url": {
                        "type": "string",
                        "description": "The URL of a Collection content source.",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ansible.AnsibleNamespaceMetadata": {
                "type": "object",
                "description": "A serializer for Namespaces.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "description": "Required named, only accepts lowercase, numbers and underscores.",
                        "maxLength": 64,
                        "pattern": "^(?!.*__)[a-z]+[0-9a-z_]*$"
                    },
                    "company": {
                        "type": "string",
                        "description": "Optional namespace company owner.",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional namespace contact email.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional short description.",
                        "maxLength": 256
                    },
                    "resources": {
                        "type": "string",
                        "description": "Optional resource page in markdown format."
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLink"
                        },
                        "description": "Labeled related links."
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "Optional avatar image for Namespace"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleNamespaceMetadataResponse": {
                "type": "object",
                "description": "A serializer for Namespaces.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Required named, only accepts lowercase, numbers and underscores.",
                        "maxLength": 64,
                        "minLength": 3,
                        "pattern": "^(?!.*__)[a-z]+[0-9a-z_]*$"
                    },
                    "company": {
                        "type": "string",
                        "description": "Optional namespace company owner.",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional namespace contact email.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional short description.",
                        "maxLength": 256
                    },
                    "resources": {
                        "type": "string",
                        "description": "Optional resource page in markdown format."
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLinkResponse"
                        },
                        "description": "Labeled related links."
                    },
                    "avatar_sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "SHA256 digest of avatar image if present.",
                        "maxLength": 64
                    },
                    "avatar_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Download link for avatar image if present."
                    },
                    "metadata_sha256": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleRepository": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "last_synced_metadata_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last synced metadata time."
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Gpg public key to verify collection signatures against"
                    },
                    "private": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "last_synced_metadata_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last synced metadata time."
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "description": "Gpg public key to verify collection signatures against"
                    },
                    "last_sync_task": {
                        "readOnly": true
                    },
                    "private": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.CollectionRemote": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "maxLength": 2000
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Remote user."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Remote password."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "User for proxy authentication."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Password for proxy authentication."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "signed_only": {
                        "type": "boolean",
                        "description": "Sync only collections that have a signature"
                    }
                },
                "required": [
                    "url"
                ]
            },
            "ansible.CollectionRemoteResponse": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "pk": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "title": "Pulp id"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "Remote user."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "last_sync_task": {
                        "type": "string",
                        "readOnly": true
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnsibleRepositoryResponse"
                        },
                        "readOnly": true
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "nullable": true,
                        "description": "User for proxy authentication."
                    },
                    "write_only_fields": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "signed_only": {
                        "type": "boolean",
                        "description": "Sync only collections that have a signature"
                    }
                },
                "required": [
                    "url"
                ]
            },
            "ansible.CollectionResponse": {
                "type": "object",
                "description": "A serializer for Ansible Collections.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.CollectionVersion": {
                "type": "object",
                "description": "A serializer for CollectionVersion Content.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "expected_name": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The name of the collection.",
                        "maxLength": 64
                    },
                    "expected_namespace": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The namespace of the collection.",
                        "maxLength": 64
                    },
                    "expected_version": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The version of the collection.",
                        "maxLength": 128
                    }
                }
            },
            "ansible.CollectionVersionMark": {
                "type": "object",
                "description": "A serializer for mark models.",
                "properties": {
                    "marked_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this mark is pointing to."
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The string value of this mark.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "marked_collection",
                    "value"
                ]
            },
            "ansible.CollectionVersionMarkResponse": {
                "type": "object",
                "description": "A serializer for mark models.",
                "properties": {
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "marked_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this mark is pointing to."
                    },
                    "value": {
                        "type": "string",
                        "description": "The string value of this mark.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "marked_collection",
                    "value"
                ]
            },
            "ansible.CollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for CollectionVersion Content.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A collection identifier."
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 64
                        },
                        "readOnly": true,
                        "description": "A list of the CollectionVersion content's authors."
                    },
                    "contents": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "description": "A JSON field with data about the contents."
                    },
                    "dependencies": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A dict declaring Collections that this collection requires to be installed for it to be usable."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A short summary description of the collection."
                    },
                    "docs_blob": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding the various documentation blobs in the collection."
                    },
                    "manifest": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding MANIFEST.json data."
                    },
                    "files": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding FILES.json data."
                    },
                    "documentation": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL to any online docs.",
                        "maxLength": 2000
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL to the homepage of the collection/project.",
                        "maxLength": 2000
                    },
                    "issues": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL to the collection issue tracker.",
                        "maxLength": 2000
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 32
                        },
                        "readOnly": true,
                        "description": "A list of licenses for content inside of a collection."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the collection.",
                        "maxLength": 64
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The namespace of the collection.",
                        "maxLength": 64
                    },
                    "origin_repository": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL of the originating SCM repository.",
                        "maxLength": 2000
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.TagResponse"
                        },
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of the collection.",
                        "maxLength": 128
                    },
                    "requires_ansible": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The version of Ansible required to use the collection. Multiple versions can be separated with a comma.",
                        "maxLength": 255
                    }
                }
            },
            "ansible.CollectionVersionSignature": {
                "type": "object",
                "description": "A serializer for signature models.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "signed_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this signature is pointing to."
                    }
                },
                "required": [
                    "signed_collection"
                ]
            },
            "ansible.CollectionVersionSignatureResponse": {
                "type": "object",
                "description": "A serializer for signature models.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "signed_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this signature is pointing to."
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The fingerprint of the public key."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The signing service used to create the signature."
                    }
                },
                "required": [
                    "signed_collection"
                ]
            },
            "ansible.GitRemote": {
                "type": "object",
                "description": "A serializer for Git Collection Remotes.",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "metadata_only": {
                        "type": "boolean",
                        "description": "If True, only metadata about the content will be stored in Pulp. Clients will retrieve content from the remote URL."
                    },
                    "git_ref": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A git ref. e.g.: branch, tag, or commit sha."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.GitRemoteResponse": {
                "type": "object",
                "description": "A serializer for Git Collection Remotes.",
                "properties": {
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "metadata_only": {
                        "type": "boolean",
                        "description": "If True, only metadata about the content will be stored in Pulp. Clients will retrieve content from the remote URL."
                    },
                    "git_ref": {
                        "type": "string",
                        "description": "A git ref. e.g.: branch, tag, or commit sha."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.Role": {
                "type": "object",
                "description": "A serializer for Role versions.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "namespace": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "namespace",
                    "version"
                ]
            },
            "ansible.RoleRemote": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.RoleRemoteResponse": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.RoleResponse": {
                "type": "object",
                "description": "A serializer for Role versions.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "version": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "namespace",
                    "version"
                ]
            },
            "ansible.Tag": {
                "type": "object",
                "description": "A serializer for nesting in the CollectionVersion model.",
                "properties": {}
            },
            "ansible.TagResponse": {
                "type": "object",
                "description": "A serializer for nesting in the CollectionVersion model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the Tag."
                    }
                }
            },
            "certguard.RHSMCertGuard": {
                "type": "object",
                "description": "RHSM Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "certguard.RHSMCertGuardResponse": {
                "type": "object",
                "description": "RHSM Content Guard Serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "certguard.X509CertGuard": {
                "type": "object",
                "description": "X.509 Content Guard Serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "certguard.X509CertGuardResponse": {
                "type": "object",
                "description": "X.509 Content Guard Serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "ca_certificate": {
                        "type": "string",
                        "description": "A Certificate Authority (CA) certificate (or a bundle thereof) used to verify client-certificate authenticity."
                    }
                },
                "required": [
                    "ca_certificate",
                    "name"
                ]
            },
            "container.BlobResponse": {
                "type": "object",
                "description": "Serializer for Blobs.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Blob file"
                    }
                },
                "required": [
                    "artifact",
                    "digest"
                ]
            },
            "container.ContainerDistribution": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "container.ContainerDistributionResponse": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "registry_path": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Registry hostname/name/ to use with docker pull command defined by this distribution."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "namespace": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "Namespace this distribution belongs to."
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "container.ContainerNamespace": {
                "type": "object",
                "description": "Serializer for ContainerNamespaces.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerNamespaceResponse": {
                "type": "object",
                "description": "Serializer for ContainerNamespaces.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerPullThroughDistribution": {
                "type": "object",
                "description": "A serializer for a specialized pull-through distribution referencing sub-distributions.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Distributions created after pulling content through cache"
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name",
                    "remote"
                ]
            },
            "container.ContainerPullThroughDistributionResponse": {
                "type": "object",
                "description": "A serializer for a specialized pull-through distribution referencing sub-distributions.",
                "properties": {
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote that can be used to fetch content when using pull-through caching."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Distributions created after pulling content through cache"
                    },
                    "namespace": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "Namespace this distribution belongs to."
                    },
                    "private": {
                        "type": "boolean",
                        "description": "Restrict pull access to explicitly authorized users. Related distributions inherit this value. Defaults to unrestricted pull access."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "base_path",
                    "name",
                    "remote"
                ]
            },
            "container.ContainerPullThroughRemote": {
                "type": "object",
                "description": "A serializer for a remote used in the pull-through distribution.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy8e2Enum"
                            }
                        ],
                        "default": "on_demand"
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "container.ContainerPullThroughRemoteResponse": {
                "type": "object",
                "description": "A serializer for a remote used in the pull-through distribution.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy8e2Enum"
                            }
                        ],
                        "default": "on_demand"
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "container.ContainerPushRepository": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerPushRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerRemote": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "upstream_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of the upstream repository"
                    },
                    "registry": {
                        "type": "string",
                        "minLength": 1
                    },
                    "include_foreign_layers": {
                        "type": "boolean"
                    },
                    "include_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to include during sync.\n            Wildcards *, ? are recognized.\n            'include_tags' is evaluated before 'exclude_tags'.\n            "
                    },
                    "exclude_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to exclude during sync.\n            Wildcards *, ? are recognized.\n            'exclude_tags' is evaluated after 'include_tags'.\n            "
                    }
                },
                "required": [
                    "name",
                    "registry",
                    "upstream_name"
                ]
            },
            "container.ContainerRemoteResponse": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "upstream_name": {
                        "type": "string",
                        "description": "Name of the upstream repository"
                    },
                    "registry": {
                        "type": "string"
                    },
                    "last_sync_task": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "include_foreign_layers": {
                        "type": "boolean"
                    },
                    "include_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to include during sync.\n            Wildcards *, ? are recognized.\n            'include_tags' is evaluated before 'exclude_tags'.\n            "
                    },
                    "exclude_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 255
                        },
                        "nullable": true,
                        "description": "\n            A list of tags to exclude during sync.\n            Wildcards *, ? are recognized.\n            'exclude_tags' is evaluated after 'include_tags'.\n            "
                    }
                },
                "required": [
                    "name",
                    "registry",
                    "upstream_name"
                ]
            },
            "container.ContainerRepository": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "manifest_signing_service": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A reference to an associated signing service."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ManifestResponse": {
                "type": "object",
                "description": "Serializer for Manifests.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Manifest file"
                    },
                    "schema_version": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Manifest schema version"
                    },
                    "media_type": {
                        "type": "string",
                        "description": "Manifest media type of the file"
                    },
                    "listed_manifests": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Manifests that are referenced by this Manifest List"
                    },
                    "config_blob": {
                        "type": "string",
                        "format": "uri",
                        "description": "Blob that contains configuration for this Manifest"
                    },
                    "blobs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Blobs that are referenced by this Manifest"
                    },
                    "annotations": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Property that contains arbitrary metadata stored inside the image manifest."
                    },
                    "labels": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Property describing metadata stored inside the image configuration"
                    },
                    "is_bootable": {
                        "type": "boolean",
                        "default": false,
                        "description": "A boolean determining whether users can boot from an image or not."
                    },
                    "is_flatpak": {
                        "type": "boolean",
                        "default": false,
                        "description": "A boolean determining whether the image bundles a Flatpak application"
                    }
                },
                "required": [
                    "artifact",
                    "blobs",
                    "digest",
                    "listed_manifests",
                    "media_type",
                    "schema_version"
                ]
            },
            "container.ManifestSignatureResponse": {
                "type": "object",
                "description": "Serializer for image manifest signatures.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Signature name in the format of `digest_algo:manifest_digest@random_32_chars`"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 digest of the signature blob"
                    },
                    "type": {
                        "type": "string",
                        "description": "Container signature type, e.g. 'atomic'"
                    },
                    "key_id": {
                        "type": "string",
                        "description": "Signing key ID"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Timestamp of a signature"
                    },
                    "creator": {
                        "type": "string",
                        "description": "Signature creator"
                    },
                    "signed_manifest": {
                        "type": "string",
                        "format": "uri",
                        "description": "Manifest that is signed"
                    }
                },
                "required": [
                    "creator",
                    "digest",
                    "key_id",
                    "name",
                    "signed_manifest",
                    "timestamp",
                    "type"
                ]
            },
            "container.TagResponse": {
                "type": "object",
                "description": "Serializer for Tags.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    },
                    "tagged_manifest": {
                        "type": "string",
                        "format": "uri",
                        "description": "Manifest that is tagged"
                    }
                },
                "required": [
                    "name",
                    "tagged_manifest"
                ]
            },
            "file.FileAlternateContentSource": {
                "type": "object",
                "description": "Serializer for File alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "file.FileAlternateContentSourceResponse": {
                "type": "object",
                "description": "Serializer for File alternate content source.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "file.FileContent": {
                "type": "object",
                "description": "Serializer for File Content.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "file.FileContentResponse": {
                "type": "object",
                "description": "Serializer for File Content.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "file.FileDistribution": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "file.FileDistributionResponse": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "file.FilePublication": {
                "type": "object",
                "description": "Serializer for File Publications.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "file.FilePublicationResponse": {
                "type": "object",
                "description": "Serializer for File Publications.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This publication is currently hosted as defined by these distributions."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "file.FileRemote": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "file.FileRemoteResponse": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy762Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "file.FileRepository": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "file.FileRepositoryResponse": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "manifest": {
                        "type": "string",
                        "nullable": true,
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "galaxy.ContainerRegistryRemote": {
                "type": "object",
                "description": "Every remote defined by a plugin should have a Remote serializer that inherits from this\nclass. Please import from `pulpcore.plugin.serializers` rather than from this module directly.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "galaxy.ContainerRegistryRemoteResponse": {
                "type": "object",
                "description": "Every remote defined by a plugin should have a Remote serializer that inherits from this\nclass. Please import from `pulpcore.plugin.serializers` rather than from this module directly.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyDb6Enum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - immediate\n* `When syncing, download all metadata and content now.` - When syncing, download all metadata and content now."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "last_sync_task": {
                        "type": "string",
                        "readOnly": true
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "write_only_fields": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "is_indexable": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "galaxy.Login": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "galaxy.LoginResponse": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "galaxy.Namespace": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLink"
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "galaxy.NamespaceResponse": {
                "type": "object",
                "description": "NamespaceSerializer but without 'links' or 'resources'.\n\nFor use in _ui/collection detail views.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 256
                    },
                    "groups": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    },
                    "related_fields": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NamespaceRelatedFieldResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "metadata_sha256": {
                        "type": "string",
                        "readOnly": true
                    },
                    "avatar_sha256": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Token\""
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:44926/"
        }
    ]
}